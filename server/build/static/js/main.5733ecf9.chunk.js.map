{"version":3,"sources":["Forms/ApplyForm/ApplyForm.module.scss","Dashboard/admin/AdminDashboard.module.scss","core/components/CustomButton/CustomButton.module.scss","core/components/OptionButton/OptionButton.module.scss","core/components/Breadcrumbs/Breadcrumbs.module.scss","App.module.scss","assets/images/logo-fii.png","Authentication/Login.module.scss","Forms/EditAriaForm/EditAriaForm.module.scss","Dashboard/admin/Users/UsersList.module.scss","Dashboard/admin/EditArias/EditArias.module.scss","assets/images/2llamas.jpg","assets/images/aria1.jpg","Dashboard/admin/Main/WhatDoYouWantToDo.module.scss","core/stores/userStore.js","core/stores/sessionStore.js","core/stores/messagesStore.js","Firebase/context.js","Firebase/firebaseConfig.js","Firebase/index.js","Firebase/Session/withAuthentication.js","NavigationBar/NavigationBar.js","MainPage/Presentation/Presentation.js","core/api/arias.js","core/components/CustomButton/CustomButton.js","Arias/Arias.js","MainPage/MainPage.js","core/components/OptionButton/OptionButton.js","Authentication/Login.js","core/stores/ariasStore.js","core/stores/coursesStore.js","core/stores/drawerStore.js","core/components/Breadcrumbs/Breadcrumbs.js","Forms/ApplyForm/ApplyForm.js","core/api/courses.js","core/api/users.js","Arias/Aria/Aria.js","Forms/EditCourseForm/EditCourseForm.js","Forms/EditAriaForm/EditAriaForm.js","Dashboard/admin/EditArias/EditArias.js","Dashboard/admin/Users/UsersList.js","Dashboard/admin/AdminDashboard.js","Dashboard/admin/Main/WhatDoYouWantToDo.js","Dashboard/trainer/Course/EditApplyForm/EditApplyForm.js","Dashboard/trainer/Course/Applicants/Applicants.js","Dashboard/trainer/Course/Members/Members.js","Dashboard/trainer/Course/Attendance/Attendance.js","Dashboard/trainer/Course/Course.js","Dashboard/trainer/TrainerDashboard.js","Dashboard/participant/Course/UserAttendance/UserAttendance.js","Dashboard/participant/Course/ParticipantCourse.js","Dashboard/participant/ParticipantDashboard.js","App.js","serviceWorker.js","index.js","NavigationBar/NavigationBar.module.scss","Arias/Aria/Aria.module.scss","Forms/EditCourseForm/EditCourseForm.module.scss","Dashboard/trainer/Course/Applicants/Applicants.module.scss","Dashboard/trainer/Course/Members/Members.module.scss","MainPage/Presentation/Presentation.module.scss","Dashboard/trainer/Course/Course.module.scss","Dashboard/trainer/Course/Attendance/Attendance.module.scss","Dashboard/participant/Course/ParticipantCourse.module.scss","Arias/Arias.module.scss","Dashboard/trainer/TrainerDashboard.module.scss","Dashboard/trainer/Course/EditApplyForm/EditApplyForm.module.scss","Dashboard/participant/ParticipantDashboard.module.scss"],"names":["module","exports","formWrapper","questionWrapper","buttonsContainer","dashboardWrapper","sidebar","listRoot","content","button","loadingCircle","isDisabled","option","subtitle","isActive","container","crumbName","__webpack_require__","p","cardContent","authOptions","inputContainer","formLabel","loginBtn","fieldWrapper","coursesWrapper","ariaLabel","mainWrapper","loading","card","cardHeaderPrimary","cardHeader","usersTitle","cardBody","listHeader","listItem","roles","wrapper","actions","description","headerTitle","UserStore","_this","this","Object","keys","users","map","key","objectSpread","uid","observable","action","_this2","user","_this3","computed","userStore","SessionStore","authUser","stores_sessionStore","MessageStore","messages","limit","messagesStore","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","assign","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","classCallCheck","createUserWithEmailAndPassword","email","password","auth","loginUserWithEmailAndPassword","signInWithEmailAndPassword","logout","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","process","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","once","then","snapshot","dbUser","val","db","ref","concat","message","courses","course","courseId","aria","ariaId","arias","attendees","sessionId","red","app","initializeApp","serverValue","database","ServerValue","storage","withAuthentication","_class","WithAuthentication","inject","_dec","observer","_React$Component","possibleConstructorReturn","getPrototypeOf","call","sessionStore","setAuthUser","JSON","parse","localStorage","getItem","inherits","createClass","value","_this$props","listener","setItem","stringify","removeItem","NavigationBar","openMenu","event","setState","anchorEl","currentTarget","handleCloseMenu","goToAdminDashboard","history","push","goToTrainerDashboard","handleLogout","response","goOnUserPanel","handleDrawerToggle","setAllDrawers","drawerStore","state","_this$props2","initials","username","match","shift","pop","toUpperCase","className","styles","headerWrapper","logo","index_es","mdUp","Menu_default","onClick","react_router_dom","to","src","fiilogo","alt","logoImage","menu","smDown","menuItem","account","aria-owns","undefined","aria-haspopup","avatar","id","open","Boolean","onClose","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","includes","withRouter","Presentation","presentation","h2","h3","h4","baseURL","getArias","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","abrupt","axios","get","stop","apply","arguments","getAria","_ref2","_callee2","_context2","_x","updateAria","_ref4","_callee4","updatedAria","_context4","put","_x3","CustomButton","children","_props$isLoading","isLoading","_props$disabled","disabled","join","CircularProgress_default","size","Arias","handleClick","index","setSelectedAria","ariasStore","setAllArias","data","allArias","name","component","MainPage","MainPage_Presentation_Presentation","src_Arias_Arias","OptionButton","icon","isSelected","title","onSelect","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","Login","confirmPassword","fullname","selectedAuthOption","handleInputChange","_ref$target","target","defineProperty","handleOnLogin","_this$state","catch","error","code","handleCreateAccount","_this$state2","set","console","log","handleOptionClick","renderContent","_this$state3","Fragment","margin","variant","onChange","type","components_OptionButton_OptionButton","icons_index_es","selectedAria","newAria","toConsumableArray","coursesStore","allCourses","selectedCourse","newCourse","adminDrawerOpen","trainerDrawerOpen","participantDrawerOpen","_this4","Breadcrumbs","crumbs","role","image","e","stopPropagation","displayName","child","memo","ApplyForm","formValues","onSubmit","questions","length","formik_esm","initialValues","enableReinitialize","render","handleSubmit","handleChange","handleBlur","values","errors","touched","autoComplete","question","formControl","onBlur","multiline","getCourses","getCourse","updateCourse","updatedCourse","getAllUsers","getUser","updateUser","_ref3","_callee3","updatedUser","_context3","_x2","Aria","init","pathname","location","substr","responseAria","res","ariaCourses","filterCourses","filter","coursesIds","handleCourseClick","applyFormQuestions","handleCrumbClick","handleApply","handleDialogClose","handleFormSubmit","newValues","application","answers","applicationDate","getCurrentDate","applications","resp","applicants","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","cardWrapper","tabsContainer","Breadcrumbs_Breadcrumbs","courseContent","contentHeader","components_CustomButton_CustomButton","onBackdropClick","fullWidth","maxWidth","formTitle","Forms_ApplyForm_ApplyForm","withStyles","theme","flexContainer","flexDirection","indicator","display","Tabs","selected","color","borderLeft","Tab","EditCourseForm","allTrainers","userList","setUsers","selectedTrainers","trainersIds","trainer","trainers","isSubmitting","setFieldValue","courseCard","Select_default","multiple","input","renderValue","chips","Chip_default","label","chip","EditAriaForm","onSubmitCourseForm","allAriaCourses","isNewCourse","isCourseSubmitting","filteredCourses","allCoursesLength","forEach","asignedCoursesIds","sort","b","addNewCourse","isSubmiting","defaultCourseValues","Forms_EditCourseForm_EditCourseForm","EditArias","getAllArias","handleEditAria","handleAddNewAria","addNewAria","handleClose","handleSubmitEditAria","defaultAria","Add_default","editBtn","Forms_EditAriaForm_EditAriaForm","UsersList","promoteToTrainer","newRoles","promoteToAdmin","removeTrainer","removeAdmin","_x4","_this$props$userStore","on","off","GroupTwoTone_default","item","xs","compose","AdminDashboard","handleEditArias","selectedItem","handleEditUsers","goOnMainPage","handleEditEvents","_this$props$drawerSto","setAdminDrawerOpen","drawerItems","List_default","ListItem_default","ListItemIcon_default","Send_default","ListItemText_default","primary","Drafts_default","react_router","exact","path","WhatDoYouWantToDo","EditApplyForm","addNewQuestion","handleSave","handleFormSave","prevProps","Fab_default","numberIcon","placeholder","placement","Applicants","allApplicants","userUID","applicant","seeAnswersDialog","selectedApplication","openAnswersDialog","handleCloseDialog","handleAcceptUser","acceptedUser","onAcceptUser","handleRemoveUser","rejectedUser","onRemoveUser","_this$props3","members","fullScreen","courseMembers","seeAnswersBtn","Clear_default","dialogContent","answer","withMobileDialog","Members","allMembers","member","Attendance","_e$target","generateQrCode","openQR","submitNewSession","createNewSession","uniqueCode","newSessionName","newLimit","currentSession","active","selectedSession","selectSession","session","addSession","closeSession","activeSession","attendance","sessions","attendee","lib_default","CustomTabs","root","backgroundColor","boxShadow","scrollButtons","CustomTab","Course","params","find","tabValue","handleTabChange","saveApplyFormQuestions","acceptApplicant","participantCourses","participantCoursesIds","removeMember","_ref5","_callee6","removedUser","_context6","userUid","_ref6","_callee5","_context5","courseID","_x5","createAttendanceSession","_ref7","_callee7","newSession","_context7","_x6","closeAttendanceSession","_ref8","_callee8","sessionIndex","_context8","findIndex","ses","_x7","AppBar_default","position","appBar","indicatorColor","Course_EditApplyForm_EditApplyForm","Course_Applicants_Applicants","Course_Members_Members","Course_Attendance_Attendance","TrainerDashboard","goOnCoursePage","handleCollapseClick","setTrainerDrawerOpen","asignedCourses","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","disablePadding","nested","UserAttendance","errorCode","handleScan","handleAttendance","scan","attendSession","scanQrCode","err","react_qr_reader_lib_default","delay","onError","handleError","onScan","style","width","ParticipantCourse","setUserPresent","updatedAttendees","ParticipantCourse_CustomTabs","ParticipantCourse_CustomTab","Course_UserAttendance_UserAttendance","ParticipantDashboard","setParticipantDrawerOpen","stores","PrivateAdminRoute","rest","objectWithoutProperties","from","PrivateTrainerRoute","index_module","src_NavigationBar_NavigationBar","App_PrivateAdminRoute","App_PrivateTrainerRoute","window","hostname","ReactDOM","context","Provider","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5733ecf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ApplyForm_formWrapper__1ypNJ\",\"questionWrapper\":\"ApplyForm_questionWrapper__3cAop\",\"buttonsContainer\":\"ApplyForm_buttonsContainer__1a9v_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWrapper\":\"AdminDashboard_dashboardWrapper__1eLzp\",\"sidebar\":\"AdminDashboard_sidebar__28Y0M\",\"listRoot\":\"AdminDashboard_listRoot__jRPbK\",\"content\":\"AdminDashboard_content__3w4dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CustomButton_button__Ai4La\",\"loadingCircle\":\"CustomButton_loadingCircle__2OXkj\",\"isDisabled\":\"CustomButton_isDisabled__33MLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"OptionButton_option__2lGpZ\",\"subtitle\":\"OptionButton_subtitle__doNm-\",\"isActive\":\"OptionButton_isActive__3EOhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Breadcrumbs_container__2eo0A\",\"crumbName\":\"Breadcrumbs_crumbName__3CU9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__3UE2e\"};","module.exports = __webpack_public_path__ + \"static/media/logo-fii.6115a455.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__27ceE\",\"cardContent\":\"Login_cardContent__1BpUd\",\"authOptions\":\"Login_authOptions__2-uYH\",\"content\":\"Login_content__2rtXl\",\"subtitle\":\"Login_subtitle__1BqAB\",\"inputContainer\":\"Login_inputContainer__3VUrf\",\"formLabel\":\"Login_formLabel__1LWk2\",\"loginBtn\":\"Login_loginBtn__1wL2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"EditAriaForm_formWrapper__8490a\",\"fieldWrapper\":\"EditAriaForm_fieldWrapper__2ZABR\",\"buttonsContainer\":\"EditAriaForm_buttonsContainer__2btz4\",\"coursesWrapper\":\"EditAriaForm_coursesWrapper__5ZxbE\",\"ariaLabel\":\"EditAriaForm_ariaLabel__3KE3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"UsersList_mainWrapper__19Mkc\",\"loading\":\"UsersList_loading__3U4oY\",\"formWrapper\":\"UsersList_formWrapper__2t7g6\",\"questionWrapper\":\"UsersList_questionWrapper__3I79N\",\"buttonsContainer\":\"UsersList_buttonsContainer__1xJ1a\",\"card\":\"UsersList_card__2CGKh\",\"cardHeaderPrimary\":\"UsersList_cardHeaderPrimary__2Uc1z\",\"cardHeader\":\"UsersList_cardHeader__2V0XD\",\"usersTitle\":\"UsersList_usersTitle__2PSzo\",\"cardBody\":\"UsersList_cardBody__32Hxf\",\"listHeader\":\"UsersList_listHeader__3USlD\",\"listItem\":\"UsersList_listItem__VEXgu\",\"roles\":\"UsersList_roles__SVuZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EditArias_wrapper__dDlQC\",\"actions\":\"EditArias_actions__3AyCJ\",\"card\":\"EditArias_card__1-nI1\",\"cardHeaderPrimary\":\"EditArias_cardHeaderPrimary__18UC8\",\"cardHeader\":\"EditArias_cardHeader__26FKm\",\"cardBody\":\"EditArias_cardBody__3u2l9\",\"description\":\"EditArias_description__1xmZa\"};","module.exports = __webpack_public_path__ + \"static/media/2llamas.dbd8e434.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aria1.42c4a341.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"WhatDoYouWantToDo_card__2fMHU\",\"headerTitle\":\"WhatDoYouWantToDo_headerTitle__2Vaqb\"};","import { observable, action, computed } from 'mobx';\r\n\r\nclass UserStore {\r\n  @observable users = null;\r\n\r\n  // constructor(rootStore) {\r\n  //   this.rootStore = rootStore;\r\n  // }\r\n\r\n  @action setUsers = users => {\r\n    this.users = users;\r\n  };\r\n\r\n  @action \r\n  setUser = (user, uid) => {\r\n    if (!this.users) {\r\n      this.users = {};\r\n    }\r\n\r\n    this.users[uid] = user;\r\n  };\r\n\r\n  @computed \r\n  get userList() {\r\n    return Object.keys(this.users || {}).map(key => ({\r\n      ...this.users[key],\r\n      uid: key,\r\n    }));\r\n  }\r\n}\r\n\r\nexport default new UserStore();","import { observable, action } from 'mobx';\r\n\r\nclass SessionStore {\r\n  @observable \r\n  authUser = null;\r\n\r\n  // constructor(rootStore) {\r\n  //   this.rootStore = rootStore;\r\n  // }\r\n\r\n  @action \r\n  setAuthUser = authUser => {\r\n    this.authUser = authUser;\r\n  };\r\n}\r\n\r\nexport default new SessionStore();","import { observable, action, computed } from 'mobx';\r\n\r\nclass MessageStore {\r\n  @observable \r\n  messages = null;\r\n\r\n  @observable \r\n  limit = 5;\r\n\r\n  // constructor(rootStore) {\r\n  //   this.rootStore = rootStore;\r\n  // }\r\n\r\n  @action \r\n  setMessages = messages => {\r\n    this.messages = messages;\r\n  };\r\n\r\n  @action \r\n  setLimit = limit => {\r\n    this.limit = limit;\r\n  };\r\n\r\n  @computed \r\n  get messageList() {\r\n    return Object.keys(this.messages || {}).map(key => ({\r\n      ...this.messages[key],\r\n      uid: key,\r\n    }));\r\n  }\r\n}\r\n\r\nexport default new MessageStore();","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n)\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDt-5FGCSKYYpsLBye4eCCgOlb59kKCrpA\",\r\n    authDomain: \"trainings-management.firebaseapp.com\",\r\n    databaseURL: \"https://trainings-management.firebaseio.com\",\r\n    projectId: \"trainings-management\",\r\n    storageBucket: \"trainings-management.appspot.com\",\r\n    messagingSenderId: \"884235430371\",\r\n    appId: \"1:884235430371:web:644be162d7dc1dbd\"\r\n};\r\n// const adminConfig = {\r\n//     \"type\": \"service_account\",\r\n//     \"project_id\": \"trainings-management\",\r\n//     \"private_key_id\": \"95c3f1c91f2be39c99e4d2c01df41ed25735e9b4\",\r\n//     \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCdzgmKIuF1ygEJ\\nt7eOUl1qLcD/7v11Vpt8VPvjkGFDT7w1dmLATLkJYxOHH5VyNHBRo7ZwRaDSiQnu\\n2FvRMTNBd888S9ZyJScoYwK0JglDNRSf6RNRFgvqdIZKuXXxvChAQ0np7ydHYxnf\\nJmndSjmjwdFwRkKeYXtR4iqGLVc5MxImLI6OPgGbcKz3xpDgqQssg3OoK4VqtkFx\\nZqvdWwRNL9qU35dJpIl99NWiNhlImS8oDudqV4LRzOz9lU+L/wATXm8izoMPlHLV\\n9+3Q4OY5eiv0CydHHcMxZYbJXrEoFim+4fnjS5NNtyBlAMQVfDs+mP6/Re0h2VGg\\nphcIzYjxAgMBAAECggEALMFRrU7FON3ou3PSaFftzH5bfXqvgcblZDbKFblODIQh\\nsdv4l+dql0H1ON55SSGcNVtEE8V7nhplqcrNB6B3k/rB2Kz9jfQBjg++pY8gE2KL\\njerRoq6pBH61052T2NJvbAJphSJhtnphzQsc/Tje7hW7K6eRn0+wZQHK47EaSstC\\nN/Q2gMgzfnLB/7058hioZBv44XzGkk6tiQjYnjyXNnVDEG+K/V77naZArHZihL0U\\nMTrQc/MAxDAF3ScGA3aA+JoyVkO65t+8DH+kG7MrID9fidYQZbc7586LTQWi6Ass\\nV/Fegtuq716EhlJpgpCAiHIMMdz4YYES0Djwr98NPQKBgQDKz73Q1+oh92npW+q4\\nUfZG8ea84VKVh7J72UT32Q2pwGyKA0gf6CNeh3K4C7+2e4bH1SXZVSVSwp7KpLuI\\nA1Dz1FFPCzRAwx59TRBiOiUjcF1AX04hvnOBY/v9p3E64uADGnc+UN13fnHeJ6Si\\ngHM7rQHE/re9v69+A3MuaedXEwKBgQDHMKkwCuJy1pyGuZsBtPchGpzBY7MoHv41\\nrvZPHTqBhuchm1Ij//pUZbpDkGNBYsppqTnhNqF6YEru1VjVbJpt07cnmx7kLdIa\\nHOL22Uf1lrXfg06glI5pwetYaM391Ex/0j5uqPlifhX6LmOx5Y1lwHdcE2z5kMdp\\n5tVET4PMawKBgQCYdlE4lYgCHs90yU+LXrooHSObLDv8AvXPGsc5Fuepi+lMWyk2\\nKzmjj2lTKCnn0bbBtN9uIQ8cxwe+SNZdajjKA/tX05FlegkKowtE/Hb8zDSd9sdy\\noIyOYY6G4gBCB1nlm1i29O14LgsFuYGPU8bMvsNMxztzno0byxYkdyKdFwKBgBFg\\nQFINkQV9jTf/dvMmKyy7GpOQM++7DGf4dEogfZsQ/pai6v5y9Q5ptV7xeIcarBed\\niIwJ7Po07jR5bf9oMuyDvIV69a3oBVz7yhzIhYt58zGlTbWaX/X/0Zzrv5R18Zpw\\n57tViDO8VgR2CYJaSQRoTsE8fJQkuhCV72K/IPszAoGBAIJzyZKA3RiLHEfhXl9I\\n84GjvdeUjkDtlbCeFD9u3DtXGRxkC1zT6unk2WJSiWzBIhBQjtwzKPdAXO7Zw5z2\\nagM+1i0m89bFTYD8FIWCaaafbcuxapP4khwmAtnvqkpZbR4XVqodqX4NbAnO2khf\\nLeEqsDubl0bOL1icC+zTr6Cs\\n-----END PRIVATE KEY-----\\n\",\r\n//     \"client_email\": \"firebase-adminsdk-ozq74@trainings-management.iam.gserviceaccount.com\",\r\n//     \"client_id\": \"112131888926350124137\",\r\n//     \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\r\n//     \"token_uri\": \"https://oauth2.googleapis.com/token\",\r\n//     \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\r\n//     \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-ozq74%40trainings-management.iam.gserviceaccount.com\"\r\n//   }\r\n  \r\n\r\nclass Firebase {\r\n    constructor() {\r\n      app.initializeApp(firebaseConfig);\r\n  \r\n      /* Helper */\r\n  \r\n      this.serverValue = app.database.ServerValue;\r\n    //   this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n  \r\n      /* Firebase APIs */\r\n  \r\n      this.auth = app.auth();\r\n      this.db = app.database();\r\n      this.storage = app.storage();\r\n  \r\n      /* Social Sign In Method Provider */\r\n  \r\n    //   this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    //   this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n    //   this.twitterProvider = new app.auth.TwitterAuthProvider();\r\n    }\r\n  \r\n    // *** Auth API ***\r\n  \r\n    createUserWithEmailAndPassword = (email, password) => {\r\n        return this.auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    loginUserWithEmailAndPassword = (email, password) => {\r\n        return this.auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n  \r\n    // doSignInWithGoogle = () =>\r\n    //   this.auth.signInWithPopup(this.googleProvider);\r\n  \r\n    // doSignInWithFacebook = () =>\r\n    //   this.auth.signInWithPopup(this.facebookProvider);\r\n  \r\n    // doSignInWithTwitter = () =>\r\n    //   this.auth.signInWithPopup(this.twitterProvider);\r\n  \r\n    logout = () => this.auth.signOut();\r\n  \r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n  \r\n    doSendEmailVerification = () =>\r\n      this.auth.currentUser.sendEmailVerification({\r\n        url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\r\n      });\r\n  \r\n    doPasswordUpdate = password =>\r\n      this.auth.currentUser.updatePassword(password);\r\n  \r\n    // *** Merge Auth and DB User API *** //\r\n  \r\n    onAuthUserListener = (next, fallback) =>\r\n      this.auth.onAuthStateChanged(authUser => {\r\n        if (authUser) {\r\n          this.user(authUser.uid)\r\n            .once('value')\r\n            .then(snapshot => {\r\n              const dbUser = snapshot.val();\r\n  \r\n              // default empty roles\r\n              if (!dbUser.roles) {\r\n                dbUser.roles = [];\r\n              }\r\n  \r\n              // merge auth and db user\r\n              authUser = {\r\n                uid: authUser.uid,\r\n                email: authUser.email,\r\n                // emailVerified: authUser.emailVerified,\r\n                // providerData: authUser.providerData,\r\n                ...dbUser,\r\n              };\r\n  \r\n              next(authUser);\r\n            });\r\n        } else {\r\n          fallback();\r\n        }\r\n      });\r\n  \r\n    // *** User API ***\r\n  \r\n    user = uid => this.db.ref(`users/${uid}`);\r\n  \r\n    users = () => this.db.ref('users');\r\n  \r\n    // *** Message API ***\r\n  \r\n    message = uid => this.db.ref(`messages/${uid}`);\r\n  \r\n    messages = () => this.db.ref('messages');\r\n\r\n    // *** Course API ***\r\n    courses = () => this.db.ref('courses');\r\n\r\n    course = (courseId) => this.db.ref(`courses/${courseId}`);\r\n\r\n    // *** Arias API ***\r\n\r\n    aria = (ariaId) => this.db.ref(`arias/${ariaId}`);\r\n\r\n    arias = () => this.db.ref('/arias');\r\n\r\n    // *** attendance API ***\r\n\r\n    attendees = (courseId, sessionId) => this.db.red(`/courses/${courseId}/attendance/${sessionId}/attendees`);\r\n  }\r\n  \r\n  export default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebaseConfig';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../index';\r\n\r\nconst withAuthentication = Component => {\r\n  @inject('sessionStore')\r\n  @observer\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      const { sessionStore } = this.props;\r\n      sessionStore.setAuthUser(\r\n        JSON.parse(localStorage.getItem('authUser')),\r\n      );\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { firebase, sessionStore } = this.props;\r\n      this.listener = firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem('authUser', JSON.stringify(authUser));\r\n          sessionStore.setAuthUser(authUser);\r\n        },\r\n        () => {\r\n          localStorage.removeItem('authUser');\r\n          sessionStore.setAuthUser(null);\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n\r\n};\r\n\r\nexport default withAuthentication;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\nimport { observer, inject }  from 'mobx-react';\r\nimport { Button, Menu, MenuItem, Avatar, Hidden } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport styles from './NavigationBar.module.scss';\r\nimport { withAuthentication } from '../Firebase/Session';\r\nimport fiilogo from '../assets/images/logo-fii.png';\r\n\r\n@inject('sessionStore', 'drawerStore')\r\n@observer\r\nclass NavigationBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    openMenu = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    }\r\n\r\n    handleCloseMenu = () => {\r\n        this.setState({ anchorEl: null });\r\n    }\r\n\r\n    goToAdminDashboard = () => {\r\n        const { history } = this.props;\r\n        this.handleCloseMenu();\r\n        history.push('/admin-dashboard');\r\n    }\r\n\r\n    goToTrainerDashboard = () => {\r\n        const { history } = this.props;\r\n        this.handleCloseMenu();\r\n        history.push('/trainer-dashboard')\r\n    }\r\n\r\n    handleLogout = () => {\r\n        const { firebase, history } = this.props;\r\n        firebase.logout().then(response => {});\r\n        this.handleCloseMenu();\r\n        history.push('/main');\r\n    }\r\n\r\n    goOnUserPanel = () => {\r\n        const { history } = this.props;\r\n        this.handleCloseMenu();\r\n        history.push('/user-account');\r\n    }\r\n\r\n    handleDrawerToggle = () => {\r\n        const { drawerStore: { setAllDrawers } } = this.props;\r\n        setAllDrawers(true)\r\n    }\r\n\r\n    render() {\r\n        const { sessionStore: { authUser }, firebase  } = this.props;\r\n        const { anchorEl } = this.state;\r\n        // const user = firebase.getCurrentUser();\r\n        // console.log(authUser)\r\n        let initials = authUser ? authUser.username.match(/\\b\\w/g) : [];\r\n        initials = ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n        return (\r\n            <div className={styles.headerWrapper}>\r\n                <div className={styles.logo}>\r\n                    <Hidden mdUp><MenuIcon onClick={this.handleDrawerToggle} /></Hidden>\r\n                    <Link to='/'>\r\n                        <img src={fiilogo} alt='fii' className={styles.logoImage} />\r\n                    </Link>\r\n                </div>\r\n                <nav className={styles.menu}>\r\n                    <Hidden smDown>\r\n                        <span className={styles.menuItem}><Link to='/main'>Arii</Link></span>\r\n                        <span><Link to='/main'>Program</Link></span>\r\n                        <span><Link to='/main'>Evenimente</Link></span>\r\n                        <span><Link to='/main'>Cum aplic</Link></span>\r\n                        <span><Link to='/main'>Despre</Link></span>\r\n                    </Hidden>\r\n                    <div className={styles.account}>\r\n                        {authUser ? (\r\n                            <div>\r\n                                <Button\r\n                                    aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.openMenu}\r\n                                >\r\n                                    <Avatar className={styles.avatar}>{initials}</Avatar>\r\n                                </Button>\r\n                                <Menu \r\n                                    id=\"simple-menu\" \r\n                                    anchorEl={anchorEl} \r\n                                    open={Boolean(anchorEl)} \r\n                                    onClose={this.handleCloseMenu}\r\n                                    elevation={0}\r\n                                    getContentAnchorEl={null}\r\n                                    anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'center',\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'center',\r\n                                    }}>\r\n                                    {authUser && authUser.roles && \r\n                                        authUser.roles.includes('admin') && (<MenuItem onClick={this.goToAdminDashboard}>Admin dashboard</MenuItem>)}\r\n                                    {authUser && authUser.roles && \r\n                                        authUser.roles.includes('trainer') && (<MenuItem onClick={this.goToTrainerDashboard}>Trainer dashboard</MenuItem>)}\r\n                                    {/* <MenuItem onClick={this.goOnUserPanel}>Cursuri</MenuItem> */}\r\n                                    <MenuItem onClick={this.goOnUserPanel}>Contul meu</MenuItem>\r\n                                    <MenuItem onClick={this.handleLogout}>Logout</MenuItem>\r\n                                </Menu>\r\n                            </div>\r\n                        ) :\r\n                        (<span><Link to='/login'>Autentificare</Link></span>)}\r\n                    </div>\r\n                    \r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withAuthentication(NavigationBar));","import React, { Component } from 'react';\r\n\r\nimport styles from './Presentation.module.scss';\r\nclass Presentation extends Component {\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n              <div className={styles.presentation}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n              </div>\r\n              <div className={styles.content}>\r\n                <h2 className={styles.h2}>FII PRACTIC PROGRAMME</h2>\r\n                <h3 className={styles.h3}>trainings list</h3>\r\n                <h4 className={styles.h4}>scheduled for 11.03.03 </h4>\r\n              </div>\r\n            </div>\r\n          )\r\n    }\r\n};\r\n\r\nexport default Presentation;\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://trainings-management.firebaseio.com/arias';\r\n\r\nexport const getArias = async () => {\r\n  return axios.get(`${baseURL}.json`);\r\n};\r\n\r\nexport const getAria = async (ariaId) => {\r\n  return axios.get(`${baseURL}/${ariaId}.json`);\r\n};\r\n\r\nexport const addAria = async (ariaInfo) => {\r\n  return axios.post(`${baseURL}.json`, ariaInfo);\r\n};\r\n\r\nexport const updateAria = async (updatedAria) => {\r\n  return axios.put(`${baseURL}/${updatedAria.ariaId}.json`, { ...updatedAria, ariaId: updatedAria.ariaId});\r\n}\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport styles from './CustomButton.module.scss';\r\n\r\n\r\nconst CustomButton = (props) => {\r\n    const { onClick, children, isLoading = false, disabled = false } = props;\r\n    return (\r\n        <Button \r\n          className={[styles.button, isLoading || disabled ? styles.isDisabled : ''].join(' ')} \r\n          onClick={onClick}\r\n          disabled={isLoading || disabled}>\r\n          {isLoading ? <CircularProgress size={20} className={styles.loadingCircle} /> : children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default CustomButton;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n// import { arias } from '../core/mocks/ariasMocks';\r\nimport { Card, CardActionArea, CardMedia, CardActions, Button, Typography, CardContent } from '@material-ui/core';\r\nimport styles from './Arias.module.scss';\r\nimport image from '../assets/images/2llamas.jpg';\r\nimport { getArias } from '../core/api/arias';\r\nimport CustomButton from '../core/components/CustomButton/CustomButton';\r\nimport ariaImage from '../assets/images/aria1.jpg';\r\n\r\n@inject('ariasStore')\r\n@observer\r\nclass Arias extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         arias: []\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount() {\r\n        const { ariasStore: { setAllArias } } = this.props;\r\n        getArias().then(response => {\r\n            setAllArias(response.data);\r\n        })\r\n    }\r\n\r\n    handleClick = (aria, index) => {\r\n        const { history, ariasStore: { setSelectedAria } } = this.props;\r\n        setSelectedAria(aria)\r\n        history.push(`/aria/${aria.ariaId}`);\r\n    }\r\n    render() {\r\n        const { ariasStore: { allArias } } = this.props;\r\n        return (\r\n            <div className={styles.mainWrapper}>\r\n                {allArias.map((aria, index) => (\r\n                    <div key={aria.ariaId} className={styles.card}>\r\n                        <div className={[styles.cardHeader, styles.cardHeaderPrimary].join(' ')}>\r\n                            <h3>\r\n                                {aria.name}\r\n                            </h3>\r\n                        </div>\r\n                        <div className={styles.cardBody}>\r\n                            <Typography component=\"p\">\r\n                                {aria.description}\r\n                            </Typography>\r\n                            <Button onClick={() => this.handleClick(aria, index)}>\r\n                                See details and apply\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    // <article key={aria.ariaId} className={styles.ariaWrapper}>\r\n                    //     <span className={styles.image}>\r\n                    //         <img src={ariaImage} alt=\"\"/>\r\n                    //     </span>\r\n                    //     <a href={`/aria/${aria.ariaId}`} className={styles.link} onClick={() => this.handleClick(aria, index)}>\r\n                    //         <h2>{aria.name}</h2>\r\n                    //         <div className={styles.content}>\r\n                    //             <p>{aria.name}</p>\r\n                    //         </div>\r\n                    //     </a>\r\n                    // </article>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Arias;","import React, { Component } from 'react';\r\nimport Presentation from './Presentation/Presentation';\r\nimport Arias from '../Arias/Arias';\r\n\r\nclass MainPage extends Component {\r\n    render() {\r\n        const { history } = this.props;\r\n        return (\r\n        <div>\r\n            <Presentation history={history} />\r\n            <Arias history={history} />\r\n        </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nimport styles from './OptionButton.module.scss';\r\n\r\nconst OptionButton = (props) => {\r\n    const { icon, isSelected, title, subtitle, onSelect } = props;\r\n    return (\r\n        <div className={[styles.option, isSelected ? styles.isActive : ''].join(' ')} onClick={onSelect}>\r\n            {icon}\r\n            <h4>{title}</h4>\r\n            <div className={styles.subtitle}>{subtitle}</div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default OptionButton;","import React, { Component } from 'react';\r\nimport {\r\n  Card, InputLabel, Button, TextField, CardContent\r\n} from '@material-ui/core';\r\nimport { AccountCircleOutlined } from '@material-ui/icons';\r\n// import PropTypes from 'prop-types';\r\nimport { observer, inject } from 'mobx-react';\r\nimport styles from './Login.module.scss';\r\nimport OptionButton from '../core/components/OptionButton/OptionButton';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with this E-Mail address already exists.\r\n  Try to login with this account instead. If you think the\r\n  account is already used from one of the social logins, try\r\n  to sign in with one of them. Afterward, associate your accounts\r\n  on your personal account page.\r\n`;\r\n@inject('userStore')\r\n@observer\r\nclass Login extends Component {\r\n//   static defaultProps = {\r\n//     history: {}\r\n//   };\r\n\r\n//   static propTypes = {\r\n//     history: PropTypes.object\r\n//   };\r\n\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    fullname: '',\r\n    selectedAuthOption: 0\r\n  };\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleOnLogin = () => {\r\n    const { firebase, history } = this.props;\r\n    const { username, password } = this.state;\r\n    firebase.loginUserWithEmailAndPassword(username, password)\r\n    .then(authUser => {\r\n      // console.log(authUser);\r\n      // setAuthenticatedUser(authUser)\r\n      history.push('/main');\r\n    })\r\n    .catch(error => {\r\n      if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n        error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n      }\r\n    })\r\n  };\r\n\r\n  handleCreateAccount = () => {\r\n    const { username, password, fullname } = this.state;\r\n    const { firebase, history } = this.props;\r\n    firebase.createUserWithEmailAndPassword(username, password)\r\n    .then(authUser => {\r\n      return firebase.user(authUser.user.uid).set({\r\n        username: fullname,\r\n        email: username,\r\n        roles: []\r\n      })\r\n    })\r\n    .then(authUser => {\r\n      // console.log(authUser);\r\n      history.push('/main');\r\n    })\r\n    .catch(error => console.log(error))\r\n  }\r\n\r\n  handleOptionClick = (value) => {\r\n    this.setState({ selectedAuthOption: value });\r\n  }\r\n\r\n  renderContent = () => {\r\n    const { username, password, fullname, selectedAuthOption, confirmPassword } = this.state;\r\n    if (selectedAuthOption === 0) {\r\n      return (\r\n        <>\r\n          <h1>Login</h1>\r\n          <div className={styles.subtitle}>Find out details and apply on trainings.</div>\r\n          <InputLabel className={styles.formLabel}>EMAIL ADRESS</InputLabel>\r\n          <TextField\r\n                name=\"username\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                value={username}\r\n                onChange={this.handleInputChange}\r\n                className={styles.inputContainer} />\r\n          <InputLabel className={styles.formLabel}>PASSWORD</InputLabel>\r\n          <TextField\r\n              name=\"password\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={this.handleInputChange}\r\n              className={styles.inputContainer} />\r\n          <Button className={styles.loginBtn} onClick={this.handleOnLogin}>Login</Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <h1>Create an account</h1>\r\n        <div className={styles.subtitle}>And start learning</div>\r\n        <InputLabel className={styles.formLabel}>FULL NAME</InputLabel>\r\n        <TextField\r\n              name=\"fullname\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              value={fullname}\r\n              onChange={this.handleInputChange}\r\n              className={styles.inputContainer} />\r\n        <InputLabel className={styles.formLabel}>EMAIL ADRESS</InputLabel>\r\n        <TextField\r\n              name=\"username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              value={username}\r\n              onChange={this.handleInputChange}\r\n              className={styles.inputContainer} />\r\n        <InputLabel className={styles.formLabel}>PASSWORD</InputLabel>\r\n        <TextField\r\n            name=\"password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={this.handleInputChange}\r\n            className={styles.inputContainer} />\r\n            <InputLabel className={styles.formLabel}>CONFIRM PASSWORD</InputLabel>\r\n        <TextField\r\n            name=\"confirmPassword\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={this.handleInputChange}\r\n            className={styles.inputContainer} />\r\n        <Button className={styles.loginBtn} onClick={this.handleCreateAccount}>Sign up</Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { selectedAuthOption } = this.state;\r\n    return (\r\n      <Card className={styles.container}>\r\n        <CardContent className={styles.cardContent}>\r\n          <div className={styles.authOptions}>\r\n            <OptionButton \r\n              title=\"Login\" \r\n              subtitle=\"Login to start learning\"\r\n              isSelected={selectedAuthOption === 0}\r\n              onSelect={() => this.handleOptionClick(0)}\r\n              icon={<AccountCircleOutlined size=\"large\" variant=\"outlined\" />}\r\n              />\r\n            <OptionButton \r\n              title=\"Sign up\" \r\n              subtitle=\"Create an account to explore all features\"\r\n              isSelected={selectedAuthOption === 1}\r\n              onSelect={() => this.handleOptionClick(1)}\r\n              icon={<AccountCircleOutlined size=\"large\" variant=\"outlined\" />}\r\n              />\r\n          </div>\r\n          <div className={styles.content}>\r\n            {this.renderContent()}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Login);","import { observable, action } from 'mobx';\r\n\r\nclass AriasStore {\r\n\r\n    @observable\r\n    allArias = [];\r\n\r\n    @observable\r\n    selectedAria = null;\r\n\r\n    @action \r\n    setAllArias = (arias) => {\r\n        this.allArias = arias;\r\n    }\r\n\r\n    @action\r\n    setSelectedAria = (aria) => {\r\n        this.selectedAria = aria;\r\n    }\r\n\r\n    @action \r\n    addNewAria = (newAria) => {\r\n        this.allArias = [...this.allArias, newAria];\r\n    }\r\n\r\n}\r\n\r\nexport default new AriasStore();","import { observable, action } from 'mobx';\r\n\r\nclass CoursesStore {\r\n\r\n    @observable\r\n    allCourses = [];\r\n\r\n    @observable\r\n    selectedCourse = null;\r\n\r\n    @action \r\n    setAllCouses = (courses) => {\r\n        this.allCourses = courses;\r\n    }\r\n\r\n    @action\r\n    setSelectedCourse = (course) => {\r\n        this.selectedCourse = course;\r\n    }\r\n\r\n    @action \r\n    addNewCourse = (newCourse) => {\r\n        this.allCourses = [...this.allCourses, newCourse];\r\n    }\r\n\r\n}\r\n\r\nexport default new CoursesStore();","import { observable, action } from 'mobx';\r\n\r\nclass DrawerStore {\r\n\r\n    @observable\r\n    adminDrawerOpen = false;\r\n\r\n    @observable\r\n    trainerDrawerOpen = false;\r\n\r\n    @observable\r\n    participantDrawerOpen = false;\r\n\r\n    @action \r\n    setAdminDrawerOpen = (value) => {\r\n        this.adminDrawerOpen = value;\r\n    }\r\n\r\n    @action \r\n    setTrainerDrawerOpen = (value) => {\r\n        this.trainerDrawerOpen = value;\r\n    }\r\n\r\n    @action \r\n    setParticipantDrawerOpen = (value) => {\r\n        this.participantDrawerOpen = value;\r\n    }\r\n\r\n    @action\r\n    setAllDrawers = (value) => {\r\n        this.adminDrawerOpen = value;\r\n        this.trainerDrawerOpen = value;\r\n        this.participantDrawerOpen = value;\r\n    }\r\n\r\n}\r\n\r\nexport default new DrawerStore();","import React, { memo } from 'react';\r\nimport styles from './Breadcrumbs.module.scss';\r\n\r\nexport const Breadcrumbs = (props) => {\r\n  const { crumbs, handleClick } = props;\r\n  if (!crumbs) {\r\n    return '';\r\n  }\r\n\r\n  return (\r\n    <span\r\n      className={styles.container}\r\n      role=\"button\"\r\n    >\r\n      <span>{crumbs.image ? crumbs.image : ''}</span>\r\n      <span \r\n        className={styles.crumbName}\r\n        onClick={(e) => {\r\n          handleClick(crumbs.value);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        {crumbs.displayName}\r\n      </span>\r\n      {crumbs.child ? '>' : ''}\r\n      {crumbs.child ? <Breadcrumbs crumbs={crumbs.child} handleClick={handleClick} /> : ''}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default memo(Breadcrumbs);\r\n","import React, { Component } from 'react';\r\nimport { Formik } from 'formik';\r\nimport styles from './ApplyForm.module.scss';\r\nimport { InputLabel, TextField, Button } from '@material-ui/core';\r\n\r\nclass ApplyForm extends Component {\r\n    render() {\r\n        const { formValues, onSubmit } = this.props;\r\n        const questions = Object.keys(formValues);\r\n        if (!questions.length) {\r\n            return (<div>Perioada de inscriere inca nu a inceput. Urmariti pagina noastra pentru a fi la curent cu toate detaliile.</div>)\r\n        }\r\n        return (\r\n            <Formik\r\n                initialValues={formValues}\r\n                enableReinitialize\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => {\r\n                    return (\r\n                        <form autoComplete=\"off\" className={styles.formWrapper}>\r\n                            {questions.map(question => {\r\n                                return (\r\n                                    <div key={question} className={styles.questionWrapper}>\r\n                                        <InputLabel>{question}</InputLabel>\r\n                                        <TextField\r\n                                            id={question}\r\n                                            className={styles.formControl}\r\n                                            value={values[question]}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            margin=\"normal\"\r\n                                            multiline\r\n                                            variant=\"outlined\"\r\n                                            name={question}\r\n                                        />\r\n                                    </div>\r\n                            )})}\r\n                            <div className={styles.buttonsContainer}>\r\n                                <Button onClick={handleSubmit}>Submit</Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ApplyForm;","import axios from 'axios';\r\n\r\nconst baseURL = 'https://trainings-management.firebaseio.com/courses';\r\n\r\nexport const getCourses = async () => {\r\n  return axios.get(`${baseURL}.json`);\r\n};\r\n\r\nexport const getCourse = async (courseId) => {\r\n  return axios.get(`${baseURL}/${courseId}.json`);\r\n};\r\n\r\nexport const addCourse = async (courseInfo) => {\r\n  return axios.post(`${baseURL}.json`, courseInfo);\r\n};\r\n\r\nexport const updateCourse = async (updatedCourse) => {\r\n  return axios.put(`${baseURL}/${updatedCourse.courseId}.json`, { ...updatedCourse, courseId: updatedCourse.courseId});\r\n}\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://trainings-management.firebaseio.com/users';\r\n\r\nexport const getAllUsers = async () => {\r\n  return axios.get(`${baseURL}.json`);\r\n};\r\n\r\nexport const getUser = async (uid) => {\r\n  return axios.get(`${baseURL}/${uid}.json`);\r\n};\r\n\r\nexport const updateUser = async (updatedUser) => {\r\n return axios.put(`${baseURL}/${updatedUser.uid}.json`, updatedUser);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Card, CardContent, CardHeader, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './Aria.module.scss';\r\nimport { getAria } from '../../core/api/arias';\r\nimport { Breadcrumbs } from '../../core/components/Breadcrumbs/Breadcrumbs';\r\nimport ApplyForm from '../../Forms/ApplyForm/ApplyForm';\r\nimport { getCourses, updateCourse } from '../../core/api/courses';\r\nimport { updateUser } from '../../core/api/users';\r\nimport CustomButton from '../../core/components/CustomButton/CustomButton';\r\n\r\n@inject('ariasStore', 'coursesStore', 'sessionStore')\r\n@observer\r\nclass Aria extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAria: null,\r\n            selectedCourse: null,\r\n            ariaCourses: [],\r\n            crumbs: {},\r\n            open: false,\r\n            questions: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.init();\r\n    }\r\n\r\n    init = async () => {\r\n        const { ariasStore: { setSelectedAria } } = this.props;\r\n        \r\n        const { location: { pathname } } =  this.props;\r\n        const ariaId = pathname.substr(6);\r\n        await getAria(ariaId).then(async response => {\r\n            const responseAria = response.data;\r\n            setSelectedAria(responseAria);\r\n            const crumbs = {\r\n                value: responseAria.ariaId,\r\n                displayName: responseAria.name\r\n            }\r\n            await getCourses().then(res => {\r\n                const ariaCourses = this.filterCourses(res.data, responseAria);\r\n        \r\n                this.setState({ ariaCourses })\r\n            })\r\n            this.setState({ selectedAria: responseAria, crumbs, selectedCourse: null });\r\n        });\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    filterCourses = (allCourses, selectedAria) => {\r\n        return allCourses.filter(course => selectedAria.coursesIds.includes(course.courseId));\r\n    }\r\n\r\n\r\n    handleCourseClick = course => {\r\n        const { crumbs } = this.state;\r\n        crumbs.child = {\r\n            value: course.name,\r\n            displayName: course.name\r\n        }\r\n        const applyFormQuestions = course.applyFormQuestions || {};\r\n        this.setState({ crumbs, selectedCourse: course, questions: Object.values(applyFormQuestions) });\r\n    }\r\n\r\n    handleCrumbClick = (value) => {\r\n        if (typeof value !== 'string') {\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    handleApply = () => {\r\n        const { questions } = this.state;\r\n        const values = [...questions];\r\n        const formValues = {};\r\n        values.map(question => formValues[question] = '');\r\n        this.setState({ open: true, formValues: formValues })\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleFormSubmit = async (newValues) => {\r\n        const { sessionStore: { authUser } } = this.props;\r\n        const { selectedCourse } = this.state;\r\n\r\n        const application = { courseId: selectedCourse.courseId, answers: newValues, applicationDate: this.getCurrentDate() };\r\n        \r\n        if (!authUser.applications) {\r\n            authUser.applications = [application];\r\n        } else {\r\n            authUser.applications = [...authUser.applications, application];\r\n        }\r\n        await updateUser(authUser).then(resp => {});\r\n\r\n        if (!selectedCourse.applicants) {\r\n            selectedCourse.applicants = [authUser.uid];\r\n        } else {\r\n            selectedCourse.applicants = [...selectedCourse.applicants, authUser.uid];\r\n        }\r\n        await updateCourse(selectedCourse).then(res => {});\r\n\r\n        this.setState({ open: false, selectedCourse });\r\n    }\r\n\r\n    getCurrentDate = (separator='/') => {\r\n\r\n        const newDate = new Date();\r\n        const date = newDate.getDate();\r\n        const month = newDate.getMonth() + 1;\r\n        const year = newDate.getFullYear();\r\n        \r\n        return `${date}${separator}${month<10?`0${month}`:`${month}`}${separator}${year}`;\r\n    }\r\n\r\n    render() {\r\n        const { selectedAria, crumbs, selectedCourse, open, formValues, ariaCourses } = this.state;\r\n        \r\n        return (\r\n            <div className={styles.cardWrapper}>\r\n                <div className={styles.tabsContainer}>\r\n                    {selectedAria && ariaCourses.map(course => (\r\n                        <Button \r\n                            className={selectedCourse && course.courseId === selectedCourse.courseId ? styles.selectedCourse : ''} \r\n                            key={course.courseId} \r\n                            onClick={() => this.handleCourseClick(course)}>{course.name}</Button>\r\n                    ))}\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <div>{selectedAria && (<Breadcrumbs crumbs={crumbs} handleClick={this.handleCrumbClick} />)}</div>\r\n                    <div className={styles.courseContent}>\r\n                        {selectedCourse && (\r\n                            <div className={styles.contentHeader}>\r\n                                <span>Logo firma</span>\r\n                                <CustomButton onClick={this.handleApply}>Aplica</CustomButton>\r\n                            </div>\r\n                        )}\r\n                        {!selectedCourse ? selectedAria && selectedAria.description : selectedCourse.description}\r\n                        {/* {selectedCourse && selectedCourse.trainers && selectedCourse.trainers.map(trainer => <div key={trainer.uid}>{trainer.username}</div>)} */}\r\n                    </div>\r\n                </div>\r\n                <Dialog \r\n                    open={open} \r\n                    onClose={this.handleDialogClose}\r\n                    onBackdropClick={this.handleDialogClose}\r\n                    fullWidth\r\n                    maxWidth=\"md\" >\r\n                    <DialogTitle className={styles.formTitle}>{selectedCourse && selectedCourse.name}</DialogTitle>\r\n                    <DialogContent><ApplyForm formValues={formValues} onSubmit={this.handleFormSubmit} /></DialogContent>\r\n                    {/* <DialogActions><Button>Submit</Button></DialogActions> */}\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst VerticalTabs = withStyles(theme => ({\r\n    flexContainer: {\r\n      flexDirection: 'column'\r\n    },\r\n    indicator: {\r\n      display: 'none',\r\n    }\r\n  }))(Tabs)\r\n  \r\n  const MyTab = withStyles(theme => ({\r\n    selected: {\r\n      color: 'tomato',\r\n      borderLeft: '2px solid tomato'\r\n    }\r\n  }))(Tab);\r\n\r\nexport default Aria;","import React, { Component } from 'react';\r\nimport { Formik } from 'formik';\r\nimport styles from './EditCourseForm.module.scss';\r\nimport { InputLabel, TextField, Button, Card, Input, MenuItem, FormControl } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { withFirebase } from '../../Firebase';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { getAllUsers } from '../../core/api/users';\r\nimport CustomButton from '../../core/components/CustomButton/CustomButton';\r\n\r\n@inject('userStore')\r\n@observer\r\nclass EditCourseForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allTrainers: [],\r\n            formValues: null,\r\n            isLoading: false\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { formValues, userStore: { userList, setUsers } } = this.props;\r\n        if(!formValues || !userList.length) {\r\n            this.setState({ isLoading: true });\r\n        }\r\n\r\n        await getAllUsers().then(response => {\r\n            setUsers(response.data);\r\n            const allTrainers = Object.values(response.data).filter(user => user.roles.includes('trainer'));\r\n            let selectedTrainers = []\r\n            if (formValues.trainersIds) {\r\n                selectedTrainers = allTrainers.filter(trainer => formValues.trainersIds.includes(trainer.uid));\r\n            }\r\n            formValues.trainers = selectedTrainers;\r\n\r\n            this.setState({ allTrainers, formValues, isLoading: false })\r\n        })\r\n\r\n        // firebase.users().on('value', snapshot => {\r\n        //     setUsers(snapshot.val());\r\n        //     this.setState({ isLoading: false });\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        const { onSubmit, isSubmitting } = this.props;\r\n        const { allTrainers, formValues } = this.state;\r\n\r\n        // const trainers = userList.length ? userList.filter(user => user.roles.includes('trainer')) : [];\r\n        // const selectedTrainers = userList.length && formValues ? userList.filter(user => formValues.trainersIds.includes(user.uid)) : []\r\n        return formValues && (\r\n            <Formik\r\n                initialValues={formValues}\r\n                enableReinitialize\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, handleChange, handleBlur, values, setFieldValue, errors, touched }) => {\r\n                    return (\r\n                        <Card className={styles.courseCard} key={values.id}>\r\n                            {/* course name */}\r\n                            <InputLabel>Nume curs</InputLabel>\r\n                            <FormControl>\r\n                                <TextField\r\n                                    id='name'\r\n                                    className={styles.formControl}\r\n                                    value={values.name}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    name='name'\r\n                                />\r\n                            </FormControl>\r\n\r\n                            {/* course description */}\r\n                            <InputLabel>Descrierea cursului</InputLabel>\r\n                            <FormControl>\r\n                                <TextField\r\n                                    id='description'\r\n                                    className={styles.formControl}\r\n                                    value={values.description}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    name='description'\r\n                                />\r\n                            </FormControl>\r\n\r\n                            {/* trainers */}\r\n                            <InputLabel>Traineri</InputLabel>\r\n                            <FormControl className={styles.formControl}>\r\n                                <Select\r\n                                multiple\r\n                                value={values.trainers}\r\n                                onChange={handleChange}\r\n                                input={<Input id=\"select-multiple-chip\" />}\r\n                                renderValue={selected => (\r\n                                    <div className={styles.chips}>\r\n                                    {selected.map(value => (\r\n                                        <Chip key={value.uid} label={value.username} className={styles.chip} />\r\n                                    ))}\r\n                                    </div>\r\n                                )}\r\n                                name='trainers'\r\n                                // MenuProps={{\r\n                                //     PaperProps: {\r\n                                //       style: {\r\n                                //         maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                //         width: 250,\r\n                                //       },\r\n                                //     },\r\n                                //   }}\r\n                                >\r\n                                {[...allTrainers].map(trainer => (\r\n                                    <MenuItem key={trainer.uid} value={trainer} >\r\n                                        {trainer.username}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            \r\n                            <div className={styles.buttonsContainer}>\r\n                                <CustomButton isLoading={isSubmitting} onClick={handleSubmit}>Save changes</CustomButton>\r\n                            </div>\r\n                        </Card>\r\n                    )}\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(EditCourseForm);","import React, { Component } from 'react';\r\nimport { Formik } from 'formik';\r\nimport styles from './EditAriaForm.module.scss';\r\nimport { InputLabel, TextField, Button, Card } from '@material-ui/core';\r\nimport { withFirebase } from '../../Firebase';\r\nimport { inject, observer } from 'mobx-react';\r\nimport EditCourseForm from '../EditCourseForm/EditCourseForm';\r\nimport { updateUser } from '../../core/api/users';\r\nimport CustomButton from '../../core/components/CustomButton/CustomButton';\r\n\r\n@inject('userStore')\r\n@observer\r\nclass EditAriaForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            addNewCourse: false,\r\n            isCourseSubmitting: false\r\n        }\r\n    }\r\n\r\n    onSubmitCourseForm = (newValues, setFieldValue, allAriaCourses, isNewCourse = false) => {\r\n        this.setState({ isCourseSubmitting: true });\r\n        const filteredCourses = allAriaCourses.filter(course => course.courseId !== newValues.courseId);\r\n        if (isNewCourse) {\r\n            const { allCoursesLength } = this.props;\r\n            newValues.courseId = allCoursesLength;\r\n        }\r\n        //connect user to course\r\n        if (newValues.trainers) {\r\n            const users = [...newValues.trainers];\r\n            newValues.trainersIds = users.map(user => user.uid);\r\n            users.forEach(trainer => {\r\n                if (trainer.asignedCoursesIds) {\r\n                    if (!trainer.asignedCoursesIds.includes(newValues.courseId)) {\r\n                        trainer.asignedCoursesIds = [...trainer.asignedCoursesIds, newValues.courseId ]\r\n                    }\r\n                } else {\r\n                    trainer.asignedCoursesIds = [ newValues.courseId ]\r\n                }\r\n                updateUser(trainer).then(response => {})\r\n            })\r\n        }\r\n        \r\n        const updatedCourses = [...filteredCourses, newValues].sort((a, b) => a.courseId - b.courseId);\r\n\r\n        setFieldValue('courses', updatedCourses);\r\n        this.setState({ addNewCourse: false, isCourseSubmitting: false });\r\n    }\r\n\r\n    addNewCourse = () => {\r\n        this.setState({ addNewCourse: true })\r\n    }\r\n\r\n    render() {\r\n        const { formValues, onSubmit, isSubmiting } = this.props;\r\n        const {  addNewCourse, isCourseSubmitting } = this.state;\r\n        const defaultCourseValues = {\r\n            name: '',\r\n            description: '',\r\n            trainers: []\r\n        }\r\n\r\n        return formValues && (\r\n            <Formik\r\n                initialValues={formValues}\r\n                enableReinitialize\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, handleChange, handleBlur, values, setFieldValue, errors, touched }) => {\r\n                    return (\r\n                         <form autoComplete=\"off\" className={styles.formWrapper}>\r\n                            <div className={styles.fieldWrapper}>\r\n                                <InputLabel className={styles.ariaLabel}>Nume</InputLabel>\r\n                                <TextField\r\n                                    id=\"name\"\r\n                                    className={styles.formControl}\r\n                                    value={values.name}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    name=\"name\"\r\n                                />\r\n                            </div>\r\n                            <div className={styles.fieldWrapper}>\r\n                                <InputLabel className={styles.ariaLabel}>Descrierea ariei</InputLabel>\r\n                                <TextField\r\n                                    id='description'\r\n                                    className={styles.formControl}\r\n                                    value={values.description}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    name=\"description\"\r\n                                />\r\n                            </div>\r\n                            <div className={styles.fieldWrapper}>\r\n                                <InputLabel className={styles.ariaLabel}>Cursuri</InputLabel>\r\n                                <div className={styles.coursesWrapper}>\r\n                                    {values.courses ? values.courses.map(course => {\r\n                                        return (\r\n                                            <EditCourseForm \r\n                                                key={course.courseId} \r\n                                                formValues={{ ...defaultCourseValues, ...course }} \r\n                                                onSubmit={(newValues) => this.onSubmitCourseForm(newValues, setFieldValue, values.courses)}\r\n                                                isSubmitting={isCourseSubmitting}\r\n                                            />\r\n                                        )\r\n                                    }) : null}\r\n                                    {addNewCourse && (\r\n                                        <EditCourseForm \r\n                                            formValues={defaultCourseValues} \r\n                                            onSubmit={(newValues) => this.onSubmitCourseForm(newValues, setFieldValue, values.courses, true)}\r\n                                            isSubmiting={isCourseSubmitting}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                                <CustomButton onClick={this.addNewCourse}>Adauga curs</CustomButton>\r\n                            </div>\r\n                            <div className={styles.buttonsContainer}>\r\n                                <CustomButton isLoading={isSubmiting} onClick={handleSubmit}>Salveaza</CustomButton>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(EditAriaForm);","import React, { Component } from 'react';\r\nimport { Card, Button, CardContent, CardActions, Dialog, DialogTitle, DialogContent, Typography } from '@material-ui/core';\r\nimport Add from '@material-ui/icons/Add';\r\n\r\nimport styles from './EditArias.module.scss';\r\nimport { getArias, updateAria } from '../../../core/api/arias';\r\nimport EditAriaForm from '../../../Forms/EditAriaForm/EditAriaForm';\r\nimport { getCourses, updateCourse } from '../../../core/api/courses';\r\nimport CustomButton from '../../../core/components/CustomButton/CustomButton';\r\n\r\nclass EditArias extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arias: [],\r\n            open: false,\r\n            selectedAria: null,\r\n            allCoursesLength: 0,\r\n            addNewAria: false,\r\n            isSubmiting: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllArias();\r\n    }\r\n\r\n    getAllArias = () => {\r\n        getArias().then(response => {\r\n            this.setState({ arias: Object.values(response.data) });\r\n        })\r\n    }\r\n\r\n    handleEditAria = async (aria) => {\r\n        await getCourses().then(response => {\r\n            const allCoursesLength = response.data.length;\r\n            const ariaCourses = aria.coursesIds ? response.data.filter(course => aria.coursesIds.includes(course.courseId)) : [];\r\n            aria.courses = ariaCourses;\r\n            console.log(aria.courses)\r\n            this.setState({ selectedAria: aria, open: true, allCoursesLength });\r\n        })\r\n    }\r\n\r\n    handleAddNewAria = () => {\r\n        this.setState({ addNewAria: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ selectedAria: null, open: false, addNewAria: false });\r\n    }\r\n\r\n    handleSubmitEditAria = async (newValues) => {\r\n        this.setState({ isSubmiting: true });\r\n        const { arias } = this.state;\r\n        if (newValues.courses) {\r\n            await newValues.courses.forEach(async course => {\r\n                delete course.trainers;\r\n                await updateCourse(course).then(response => {});\r\n            })\r\n            newValues.coursesIds = newValues.courses.map(course => course.courseId);\r\n            delete newValues.courses;\r\n        }\r\n        \r\n        if (!newValues.ariaId && newValues.ariaId !== 0) {\r\n            newValues.ariaId = arias.length;\r\n        }\r\n        updateAria(newValues).then(response => { \r\n            this.getAllArias(); \r\n            this.handleClose();\r\n            this.setState({ isSubmiting: false });\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { arias, open, selectedAria, allCoursesLength, addNewAria, isSubmiting } = this.state;\r\n        const defaultAria = {\r\n            courses: [],\r\n            coursesIds: [],\r\n            description: \"\",\r\n            image: \"/nothing2.jpg\",\r\n            name: ''\r\n        }\r\n        return (\r\n            <>\r\n                <div className={styles.actions}>\r\n                    <h2>Arii</h2>\r\n                    <CustomButton onClick={this.handleAddNewAria}>\r\n                        <Add />\r\n                        Adauga arie\r\n                    </CustomButton>\r\n                </div>\r\n                <div className={styles.wrapper}>\r\n                    {arias.map(aria => (\r\n                        <div key={aria.ariaId} className={styles.card}>\r\n                            <div className={[styles.cardHeader, styles.cardHeaderPrimary].join(' ')}>\r\n                                <h3>{aria.name}</h3>\r\n                            </div>\r\n                            \r\n                            <div className={styles.cardBody}>\r\n                                <div className={styles.description}>{aria.description}</div>\r\n                                <Button className={styles.editBtn} onClick={() => this.handleEditAria(aria)}>Edit Aria</Button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <Dialog open={open} onBackdropClick={this.handleClose} fullWidth maxWidth=\"md\">\r\n                        <DialogTitle>Editeaza aria {selectedAria && selectedAria.name}</DialogTitle>\r\n                        <DialogContent><EditAriaForm formValues={{...defaultAria, ...selectedAria}} isSubmiting={isSubmiting} onSubmit={this.handleSubmitEditAria} allCoursesLength={allCoursesLength}/></DialogContent>\r\n                    </Dialog>\r\n                    <Dialog open={addNewAria} onBackdropClick={this.handleClose} fullWidth maxWidth=\"md\">\r\n                        <DialogTitle>Adauga o noua arie</DialogTitle>\r\n                        <DialogContent><EditAriaForm formValues={defaultAria} onSubmit={this.handleSubmitEditAria} isSubmiting={isSubmiting} allCoursesLength={allCoursesLength}/></DialogContent>\r\n                    </Dialog>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditArias;","import React, { Component } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport GroupIcon from '@material-ui/icons/GroupTwoTone'\r\n\r\nimport styles from './UsersList.module.scss';\r\nimport { withFirebase } from '../../../Firebase';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { compose } from 'recompose';\r\nimport { updateUser } from '../../../core/api/users';\r\nimport CustomButton from '../../../core/components/CustomButton/CustomButton';\r\n\r\nclass UsersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state =  {\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { firebase, userStore: { userList, setUsers } } = this.props;\r\n        if(!userList.length) {\r\n            this.setState({ isLoading: true });\r\n        }\r\n\r\n        firebase.users().on('value', snapshot => {\r\n            setUsers(snapshot.val());\r\n\r\n            this.setState({ isLoading: false });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { firebase } = this.props;\r\n        firebase.users().off();\r\n    }\r\n\r\n    promoteToTrainer = async (user) => {\r\n      const newRoles = [...user.roles, 'trainer']\r\n\r\n      await updateUser({...user, roles: newRoles }).then(() => {});\r\n    }\r\n\r\n    promoteToAdmin = async (user) => {\r\n      const newRoles = [...user.roles, 'admin']\r\n\r\n      await updateUser({...user, roles: newRoles }).then(() => {});\r\n    }\r\n\r\n    removeTrainer = async (user) => { \r\n      const newRoles = user.roles.filter(role => role !== 'trainer');\r\n\r\n      await updateUser({...user, roles: newRoles }).then(() => {});\r\n    }\r\n\r\n    removeAdmin = async (user) => { \r\n      const newRoles = user.roles.filter(role => role !== 'admin');\r\n\r\n      await updateUser({...user, roles: newRoles }).then(() => {});\r\n    }\r\n\r\n    render() {\r\n        const { userStore: { userList } } = this.props;\r\n        const { isLoading } = this.state;\r\n\r\n        const users = userList;\r\n        if (isLoading) {\r\n          return <div className={styles.loading}>Loading... </div>\r\n        }\r\n\r\n        return (\r\n          <div className={styles.mainWrapper}>\r\n            <div className={styles.card}>\r\n              <div className={[styles.cardHeader, styles.cardHeaderPrimary].join(' ')}>\r\n                <div className={styles.usersTitle}><GroupIcon /> {users.length} users</div>\r\n              </div>\r\n              <div className={styles.cardBody}>\r\n                <ul>\r\n                  <li className={styles.listHeader}>\r\n                    <Grid container>\r\n                      <Grid item xs={3}><span><strong>Nume</strong></span></Grid>\r\n                      <Grid item xs={3}><span><strong>E-mail</strong></span></Grid>\r\n                      <Grid item xs={2}><span><strong>Roluri</strong></span></Grid>\r\n                      <Grid item xs={4}><span><strong>Actiuni</strong></span></Grid>\r\n                    </Grid>\r\n                  </li>\r\n                  {users && users.map(user => {\r\n                    return (\r\n                    <li key={user.uid} className={styles.listItem}>\r\n                      <Grid container>\r\n                        <Grid item xs={3}><span>{user.username}</span></Grid>\r\n                        <Grid item xs={3}><span>{user.email}</span></Grid>\r\n                        <Grid item xs={2}><span className={styles.roles}>{user.roles && user.roles.join(' | ')}</span></Grid>\r\n                        <Grid item xs={4}>\r\n                          <span>\r\n                            {(!user.roles || !user.roles.includes('trainer')) && (<CustomButton onClick={() => this.promoteToTrainer(user)}>Promoveaza la trainer</CustomButton>)}\r\n                            {(!user.roles || !user.roles.includes('admin')) && (<CustomButton onClick={() => this.promoteToAdmin(user)}>Promoveaza la admin</CustomButton>)}\r\n                            {(user.roles && user.roles.includes('trainer')) && (<CustomButton onClick={() => this.removeTrainer(user)}>Sterge trainer</CustomButton>)}\r\n                            {(user.roles && user.roles.includes('admin')) && (<CustomButton onClick={() => this.removeAdmin(user)}>Sterge admin</CustomButton>)}\r\n                          </span>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </li>\r\n                  )})}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withFirebase,\r\n    inject('userStore'),\r\n    observer,\r\n  )(UsersList);","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { AccountCircleOutlined } from '@material-ui/icons';\r\n\r\nimport styles from './AdminDashboard.module.scss';\r\nimport EditArias from './EditArias/EditArias';\r\nimport UsersList from './Users/UsersList';\r\nimport { Hidden, Drawer } from '@material-ui/core';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject('drawerStore')\r\n@observer\r\nclass AdminDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedItem: 0,\r\n        }\r\n    }\r\n\r\n    handleEditArias = () => {\r\n        const { history } = this.props;\r\n        history.push('/admin-dashboard/edit');\r\n        this.setState({ selectedItem: 1 });\r\n        this.handleDrawerToggle();\r\n    }\r\n\r\n    handleEditUsers = () => {\r\n        const { history } = this.props;\r\n        \r\n        this.setState({ selectedItem: 3 });\r\n        history.push('/admin-dashboard/users');\r\n        this.handleDrawerToggle();\r\n    }\r\n\r\n    goOnMainPage = () => {\r\n        const { history } = this.props;\r\n        this.setState({ selectedItem: 0 })\r\n        history.push('/admin-dashboard');\r\n        this.handleDrawerToggle();\r\n    }\r\n\r\n    handleEditEvents = () => {\r\n        this.setState({ selectedItem: 2})\r\n        this.handleDrawerToggle();\r\n    }\r\n\r\n    handleDrawerToggle = () => {\r\n        const { drawerStore: {  adminDrawerOpen, setAdminDrawerOpen} } = this.props;\r\n        setAdminDrawerOpen(!adminDrawerOpen);\r\n    }\r\n\r\n    drawerItems = () => {\r\n        return (\r\n            <List\r\n              component=\"nav\"\r\n              // subheader={<ListSubheader component=\"div\">Nested List Items</ListSubheader>}\r\n              className={styles.listRoot}>\r\n                <ListItem button onClick={this.goOnMainPage}>\r\n                    <ListItemIcon>\r\n                    <SendIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Home\" />\r\n                </ListItem>\r\n                <ListItem button onClick={this.handleEditArias}>\r\n                    <ListItemIcon>\r\n                    <SendIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Arias\" />\r\n                </ListItem>\r\n                <ListItem button onClick={this.handleEditEvents}>\r\n                    <ListItemIcon>\r\n                    <DraftsIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Events\" />\r\n                </ListItem>\r\n                <ListItem button onClick={this.handleEditUsers}>\r\n                    <ListItemIcon>\r\n                    <AccountCircleOutlined />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Users\" />\r\n                </ListItem>\r\n            </List>\r\n       )\r\n    }\r\n\r\n    render() {\r\n        const { drawerStore: { adminDrawerOpen } } = this.props;\r\n        return (\r\n            <div className={styles.dashboardWrapper}>\r\n               <Hidden smDown>\r\n                    <div className={styles.sidebar}>\r\n                        {this.drawerItems()}\r\n                    </div>\r\n               </Hidden>\r\n               <Hidden mdUp>\r\n                   <Drawer\r\n                    variant=\"temporary\"\r\n                    open={adminDrawerOpen}\r\n                    onClose={this.handleDrawerToggle}>\r\n                        {this.drawerItems()}\r\n                    </Drawer>\r\n               </Hidden>\r\n               <div className={styles.content}>\r\n                    <Switch>\r\n                        <Route exact path=\"/admin-dashboard\" />\r\n                        <Route exact path=\"/admin-dashboard/edit\" component={EditArias} />\r\n                        <Route exact path=\"/admin-dashboard/users\" component={UsersList} />\r\n                    </Switch>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminDashboard);","import React, { Component } from 'react';\r\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\r\nimport { AccountCircleOutlined } from '@material-ui/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport OptionButton from '../../../core/components/OptionButton/OptionButton';\r\n\r\nimport styles from './WhatDoYouWantToDo.module.scss';\r\n\r\nclass WhatDoYouWantToDo extends Component {\r\n    render() {\r\n        const { history } = this.props;\r\n        return (\r\n            <div>\r\n               Welcome \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WhatDoYouWantToDo;","import React, { Component } from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport styles from './EditApplyForm.module.scss';\r\nimport { TextField, Tooltip } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport CustomButton from '../../../../core/components/CustomButton/CustomButton';\r\n\r\nclass EditApplyForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questions: ['']\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { questions } = this.props;\r\n        if (questions.length) {\r\n            this.setState({ questions });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { questions } = this.props;\r\n        if (JSON.stringify(questions) !== JSON.stringify(prevProps.questions)) {\r\n            this.setState({ questions });\r\n        }\r\n    }\r\n\r\n    addNewQuestion = () => {\r\n        const { questions } = this.state;\r\n        this.setState({ questions: [...questions, '']})\r\n    }\r\n\r\n    handleInputChange = (e, index) => {\r\n        const { target: { value } } = e;\r\n        const { questions } = this.state;\r\n        questions[index] = value;\r\n        this.setState({ questions: [...questions] });\r\n    }\r\n    handleSave = () => {\r\n        const { questions } = this.state;\r\n        const { handleFormSave } = this.props;\r\n        handleFormSave(questions);\r\n    }\r\n\r\n    render() {\r\n        const { questions } = this.state;\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div>Adauga intrebarile pentru formularul de aplicare. Cand ai terminat salveaza modificarile. Poti modifica intrebarile mai tarziu.</div>\r\n                {questions.map((question, index) => (\r\n                    <div key={index} className={styles.questionWrapper}>\r\n                        <Fab size=\"small\" className={styles.numberIcon}>{index}</Fab>\r\n                        <TextField\r\n                            name=\"question\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            value={question.length ? question : ''}\r\n                            placeholder=\"Add new question...\"\r\n                            onChange={(e) => this.handleInputChange(e, index)}\r\n                            className={styles.inputContainer} />\r\n                    </div>\r\n                ))}\r\n                <div className={styles.buttonsContainer}>\r\n                    <Tooltip title=\"Adauga o noua intrebare\" placement=\"bottom\">\r\n                        <CustomButton onClick={this.addNewQuestion}><Add /></CustomButton>\r\n                    </Tooltip>\r\n                    <CustomButton onClick={this.handleSave}>Salveaza</CustomButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditApplyForm;","import React, { Component } from 'react';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\nimport styles from './Applicants.module.scss';\r\nimport { getUser } from '../../../../core/api/users';\r\nimport { Grid, Button, TextField, Dialog, DialogContent, DialogActions } from '@material-ui/core';\r\nimport CustomButton from '../../../../core/components/CustomButton/CustomButton';\r\n\r\nclass Applicants extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            applicants: [],\r\n            seeAnswersDialog: false,\r\n            selectedApplication: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.init()\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { applicants, course: { courseId } } = this.props;\r\n        if (JSON.stringify(applicants) !== JSON.stringify(prevProps.applicants) \r\n            || courseId !== prevProps.course.courseId) {\r\n            await this.init();\r\n        }\r\n    }\r\n\r\n    init = async() => {\r\n        const { applicants, course: { courseId } } = this.props;\r\n        let allApplicants = [];\r\n        if (applicants.length) {\r\n            applicants.forEach(async userUID => {\r\n                await getUser(userUID).then(response => {\r\n                    const applicant = response.data;\r\n                    applicant.applications = applicant.applications.filter(application => application.courseId === courseId)\r\n                    allApplicants = [...allApplicants, applicant];\r\n                    this.setState({ applicants: allApplicants, seeAnswersDialog: false, selectedApplication: null });\r\n                })\r\n            });\r\n        }\r\n        \r\n        this.setState({ applicants: allApplicants, seeAnswersDialog: false, selectedApplication: null });\r\n    }\r\n\r\n    openAnswersDialog = (application) => {\r\n        this.setState({ seeAnswersDialog: true, selectedApplication: application.answers });\r\n    }\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({ seeAnswersDialog: false });\r\n    }\r\n\r\n    handleAcceptUser = async (acceptedUser) => {\r\n        const { onAcceptUser } = this.props;\r\n        await onAcceptUser(acceptedUser);\r\n    }\r\n\r\n    handleRemoveUser = async (rejectedUser) => {\r\n        const { onRemoveUser } = this.props;\r\n        await onRemoveUser(rejectedUser);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { applicants, seeAnswersDialog, selectedApplication } = this.state;\r\n        const { course: { members }, fullScreen } = this.props;\r\n        const courseMembers = members || [];\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <ul>\r\n                    <li className={styles.listHeader}>\r\n                        <Grid container>\r\n                            <Grid item xs={2}><span><strong>Aplicant</strong></span></Grid>\r\n                            <Grid item xs={3}><span><strong>Formular de aplicare</strong></span></Grid>\r\n                            <Grid item xs={2}><span><strong>Data</strong></span></Grid>\r\n                            <Grid item xs={3}><span><strong>Observatii</strong></span></Grid>\r\n                            <Grid item xs={2}><span><strong>Actiuni</strong></span></Grid>\r\n                        </Grid>\r\n                    </li>\r\n                    {applicants.map((user, index) => {\r\n                        return (\r\n                            <li key={index} className={styles.listItem}>\r\n                                <Grid container>\r\n                                    <Grid item xs={2}>\r\n                                        aplicant#{index}\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Button className={styles.seeAnswersBtn} onClick={() => this.openAnswersDialog(user.applications[0])}>Vezi raspunsuri</Button>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        {user.applications[0].applicationDate || '-'}\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <TextField placeholder=\"Observatii\" />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        {!courseMembers.includes(user.uid) && (<CustomButton onClick={() => this.handleAcceptUser(user)}>Accepta</CustomButton>)}\r\n                                        {courseMembers.includes(user.uid) && (<CustomButton onClick={() => this.handleRemoveUser(user)}>Sterge</CustomButton>)}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <Dialog open={seeAnswersDialog} onClose={this.handleCloseDialog} fullScreen={fullScreen}>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n                            <Clear />\r\n                        </Button>\r\n                    </DialogActions>\r\n                    <DialogContent className={styles.dialogContent}>\r\n                        {selectedApplication && Object.keys(selectedApplication).map(question => (\r\n                            <div key={question}>\r\n                                <div className={styles.question}>{question}</div>\r\n                                <div className={styles.answer}>{selectedApplication[question]}</div>\r\n                            </div>\r\n                        ))}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withMobileDialog()(Applicants);","import React, { Component } from 'react';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\nimport styles from './Members.module.scss';\r\nimport { getUser, updateUser } from '../../../../core/api/users';\r\nimport { Grid, Button, TextField, Dialog, DialogContent, DialogActions } from '@material-ui/core';\r\nimport { getCourse, updateCourse } from '../../../../core/api/courses';\r\nimport CustomButton from '../../../../core/components/CustomButton/CustomButton';\r\n// import { TextField, Button, Tooltip } from '@material-ui/core';\r\n// import { Add } from '@material-ui/icons';\r\n\r\nclass Members extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            members: [],\r\n            seeAnswersDialog: false,\r\n            selectedApplication: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.init()\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { members, courseId } = this.props;\r\n        if (JSON.stringify(members) !== JSON.stringify(prevProps.members) || courseId !== prevProps.courseId) {\r\n            await this.init();\r\n        }\r\n    }\r\n\r\n    init = async() => {\r\n        const { members, courseId } = this.props;\r\n        let allMembers = [];\r\n        if (members.length) {\r\n            members.forEach(async userUID => {\r\n                await getUser(userUID).then(response => {\r\n                    const member = response.data;\r\n                    member.applications = member.applications.filter(application => application.courseId === courseId)\r\n                    allMembers = [...allMembers, member];\r\n                    this.setState({ members: allMembers, seeAnswersDialog: false, selectedApplication: null });\r\n                })\r\n            });\r\n        }\r\n        \r\n        this.setState({ members: allMembers, seeAnswersDialog: false, selectedApplication: null });\r\n    }\r\n\r\n    openAnswersDialog = (application) => {\r\n        this.setState({ seeAnswersDialog: true, selectedApplication: application.answers });\r\n    }\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({ seeAnswersDialog: false });\r\n    }\r\n\r\n    handleRemoveUser = async (user) => {\r\n        const { onRemoveUser } = this.props;\r\n        await onRemoveUser(user);\r\n    }\r\n\r\n    render() {\r\n        const { fullScreen } = this.props;\r\n        const { members, seeAnswersDialog, selectedApplication } = this.state;\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <ul>\r\n                    <li className={styles.listHeader}>\r\n                        <Grid container>\r\n                            <Grid item xs={2}><span><strong>Nume</strong></span></Grid>\r\n                            <Grid item xs={3}><span><strong>Formular de aplicare</strong></span></Grid>\r\n                            <Grid item xs={2}><span><strong>Data</strong></span></Grid>\r\n                            <Grid item xs={3}><span><strong>Observatii</strong></span></Grid>\r\n                            <Grid item xs={2}><span><strong>Actiuni</strong></span></Grid>\r\n                        </Grid>\r\n                    </li>\r\n                    {members.map((user, index) => {\r\n                        return (\r\n                        <li key={index} className={styles.listItem}>\r\n                            <Grid container>\r\n                                <Grid item xs={2}>\r\n                                    {user.username}\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Button className={styles.seeAnswersBtn} onClick={() => this.openAnswersDialog(user.applications[0])}>Vezi raspunsuri</Button>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    {user.applications[0].applicationDate || '-'}\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <TextField placeholder=\"Observatii\" />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <CustomButton onClick={() => this.handleRemoveUser(user)}>Sterge</CustomButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <Dialog open={seeAnswersDialog} onClose={this.handleCloseDialog} fullScreen={fullScreen}>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n                            <Clear />\r\n                        </Button>\r\n                    </DialogActions>\r\n                    <DialogContent className={styles.dialogContent}>\r\n                        {selectedApplication && Object.keys(selectedApplication).map(question => (\r\n                            <div key={question}>\r\n                                <div className={styles.question}>{question}</div>\r\n                                <div className={styles.answer}>{selectedApplication[question]}</div>\r\n                            </div>\r\n                        ))}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withMobileDialog()(Members);","import React, { Component } from 'react';\r\nimport QRCode from 'qrcode.react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\nimport styles from './Attendance.module.scss';\r\nimport {  Button, TextField, Dialog, DialogContent, withMobileDialog, DialogActions } from '@material-ui/core';\r\nimport CustomButton from '../../../../core/components/CustomButton/CustomButton';\r\n\r\nclass Attendance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uniqueCode: '',\r\n            openQR: false,\r\n            newSessionName: '',\r\n            newLimit: '',\r\n            selectedSession: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { activeSession } = this.props;\r\n        this.setState({ selectedSession: activeSession });\r\n        await this.init()\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { course } = this.props;\r\n        if (JSON.stringify(course.attendance) !== JSON.stringify(prevProps.course.attendance)\r\n            || course.courseId !== prevProps.course.courseId) {\r\n            await this.init();\r\n        }\r\n    }\r\n\r\n    init = async() => {\r\n        \r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const { target: { value, name } } = e;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    generateQrCode = () => {\r\n        this.setState({ openQR: true })\r\n    }\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({ openQR: false });\r\n    }\r\n\r\n    submitNewSession = async() => {\r\n        const { course, createNewSession } = this.props;\r\n        const { uniqueCode, newSessionName, newLimit } = this.state;\r\n        console.log( course );\r\n        const currentSession = { uniqueCode, date: newSessionName, limit: newLimit, active: true };\r\n        this.setState({ selectedSession: currentSession })\r\n        await createNewSession(currentSession);\r\n    }\r\n\r\n    selectSession = (session) => {\r\n        this.setState({ selectedSession: session });\r\n    }\r\n\r\n    addSession = () => {\r\n        this.setState({ selectedSession: null, uniqueCode: '', newLimit: '', newSessionName: ''});\r\n    }\r\n\r\n    closeSession = () => {\r\n        const { closeSession } = this.props;\r\n        const { selectedSession } = this.state;\r\n        closeSession(selectedSession);\r\n        // this.setState({ selectedSession: null });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { uniqueCode, openQR, newSessionName, newLimit, selectedSession } = this.state;\r\n        const { course, fullScreen, activeSession } = this.props;\r\n\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.sessions}>\r\n                    {course.attendance && course.attendance.map(session => (\r\n                        <Button \r\n                            className={selectedSession && selectedSession.date === session.date ? styles.selectedSession : ''}\r\n                            onClick={() => this.selectSession(session)}\r\n                            key={session.uniqueCode + session.date}\r\n                        >\r\n                            {session.date}\r\n                        </Button>\r\n                    ))}\r\n                    {(!activeSession || !course.attendance || !selectedSession ) && (\r\n                        <Button \r\n                            className={!selectedSession ? styles.selectedSession : ''}\r\n                            onClick={this.addSession}>\r\n                                <AddIcon />\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n                <div className={styles.content}>\r\n                    {!selectedSession && (\r\n                    <div>\r\n                        <h3>Adauga o sesiune noua</h3>\r\n                        <div>Nume</div>\r\n                        <TextField\r\n                            name=\"newSessionName\"\r\n                            value={newSessionName}\r\n                            onChange={this.handleInputChange}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <div>Nr max membri</div>\r\n                        <TextField\r\n                            name=\"newLimit\"\r\n                            value={newLimit}\r\n                            onChange={this.handleInputChange}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <div>Cod unic al sesiunii</div>\r\n                        <TextField \r\n                            name=\"uniqueCode\"\r\n                            value={uniqueCode}\r\n                            onChange={this.handleInputChange}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            type=\"password\" \r\n                        />\r\n                        <CustomButton onClick={this.submitNewSession}>Submit</CustomButton>\r\n                    </div>\r\n                    )}\r\n                    {selectedSession && (\r\n                        <div>\r\n                            <div>Data: {selectedSession.date}</div>\r\n                            {selectedSession.active && <CustomButton onClick={this.generateQrCode}>Afiseaza Qr code</CustomButton>}\r\n                            <div>Membri prezenti: </div>\r\n                            <div>\r\n                                {selectedSession.attendees && selectedSession.attendees.map((attendee, index) => (\r\n                                    <div key={attendee.uid}>{index+1}. {attendee.username}</div>\r\n                                ))}\r\n                            </div>\r\n                            {selectedSession.active && <div><CustomButton onClick={this.closeSession}>Inchide sesiunea</CustomButton></div>}\r\n                            <Dialog open={openQR} onClose={this.handleCloseDialog} fullScreen>\r\n                                <DialogActions>\r\n                                    <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n                                        <Clear />\r\n                                    </Button>\r\n                                </DialogActions>\r\n                                <DialogContent className={styles.dialogContent}>\r\n                                  <QRCode \r\n                                    value={uniqueCode}\r\n                                    size={fullScreen ? 300 : 700} />\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withMobileDialog()(Attendance);","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './Course.module.scss';\r\nimport { getCourse, updateCourse } from '../../../core/api/courses';\r\nimport { getUser, updateUser } from '../../../core/api/users';\r\nimport EditApplyForm from './EditApplyForm/EditApplyForm';\r\nimport Applicants from './Applicants/Applicants';\r\nimport Members from './Members/Members';\r\nimport Attendance from './Attendance/Attendance';\r\n\r\nconst CustomTabs = withStyles({\r\n    root: {\r\n      backgroundColor: 'transparent',\r\n      boxShadow: 'none'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#FFF',\r\n    },\r\n    scrollButtons: {\r\n        color: '#FFF'\r\n    }\r\n})(Tabs);\r\n\r\nconst CustomTab = withStyles({\r\n    root: {\r\n      color: '#FFF'\r\n    },\r\n    selected: {\r\n      color: '#FFF',\r\n    },\r\n})(Tab);\r\n\r\nclass Course extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            course: null,\r\n            tabValue: 0\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.init()\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { location: { pathname } } =  this.props;\r\n        if (pathname !== prevProps.location.pathname) {\r\n            await this.init();\r\n        }\r\n    }\r\n\r\n    init = async () => {\r\n        const { match: { params: { courseId } } } =  this.props;\r\n        await getCourse(courseId).then(response => {\r\n            const course = response.data;\r\n            let activeSession = null;\r\n            if (course.attendance) {\r\n                activeSession = course.attendance.find(session => session.active);\r\n            }\r\n            this.setState({ course, tabValue: 0, activeSession });\r\n        })\r\n    }\r\n\r\n    handleTabChange = (event, value) => {\r\n        this.setState({ tabValue: value });\r\n    };\r\n\r\n    saveApplyFormQuestions = async (questions) => {\r\n        const { course } = this.state;\r\n        course.applyFormQuestions = questions;\r\n        this.setState({ course: {...course} })\r\n        await updateCourse(course).then(response => {})\r\n    }\r\n\r\n    acceptApplicant = async (acceptedUser) => {\r\n        const { course } = this.state;\r\n\r\n        await getUser(acceptedUser.uid).then(async response => {\r\n            const user = response.data;\r\n            const participantCourses = user.participantCoursesIds ? [...user.participantCoursesIds, course.courseId] : [course.courseId];\r\n            const updatedUser = { ...response.data, participantCoursesIds: participantCourses}\r\n            await updateUser(updatedUser).then(res => {})\r\n        });\r\n\r\n        const members = course.members ? [...course.members, acceptedUser.uid] : [acceptedUser.uid];\r\n        const updatedCourse = {...course, members};\r\n        this.setState({ course: updatedCourse });\r\n        await updateCourse(updatedCourse).then(() => {});\r\n    }\r\n\r\n    removeMember = async (removedUser) => {\r\n        const { course } = this.state;\r\n\r\n        course.members = [...course.members].filter(userUid => userUid !== removedUser.uid)\r\n        this.setState({ course: {...course}});\r\n        await updateCourse(course).then(() => {});\r\n\r\n        await getUser(removedUser.uid).then(async response => {\r\n            const user = response.data;\r\n            const participantCourses =[...user.participantCoursesIds].filter(courseID => courseID !== course.courseId);\r\n            const updatedUser = { ...response.data, participantCoursesIds: participantCourses}\r\n            await updateUser(updatedUser).then(res => {})\r\n        });\r\n    }\r\n\r\n    createAttendanceSession = async (newSession) => {\r\n        const { course } = this.state;\r\n        const attendance = course.attendance ? [...course.attendance, newSession] : [newSession];\r\n        const updatedCourse = {\r\n            ...course,\r\n            attendance\r\n        }\r\n        this.setState({ course: {...updatedCourse}});\r\n        await updateCourse(updatedCourse).then(() => {});\r\n    }\r\n\r\n    closeAttendanceSession = async (session) => {\r\n        const { course } = this.state;\r\n        const sessionIndex = course.attendance.findIndex(ses => ses.active)\r\n        course.attendance[sessionIndex].active =  false;\r\n        const updatedCourse = {\r\n            ...course\r\n        }\r\n        this.setState({ course: {...updatedCourse}, activeSession: null });\r\n        await updateCourse(updatedCourse).then(() => {});\r\n    }\r\n\r\n    render() {\r\n        const { course, tabValue, activeSession } = this.state;\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.card}>\r\n                    <div className={[styles.cardHeader, styles.cardHeaderPrimary].join(' ')}>\r\n                        <h2>{course && course.name}</h2>\r\n                        <AppBar position=\"static\" color=\"default\" className={styles.appBar}>\r\n                            <CustomTabs\r\n                                value={tabValue}\r\n                                onChange={this.handleTabChange}\r\n                                indicatorColor=\"primary\"\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                            >\r\n                                <CustomTab value={0} label=\"Formular de aplicare\" />\r\n                                <CustomTab value={1} label=\"Aplicanti\" />\r\n                                <CustomTab value={2} label=\"Membri\" />\r\n                                <CustomTab value={3} label=\"Prezente\" />\r\n                                <CustomTab value={4} label=\"Anunturi\" />\r\n                            </CustomTabs>\r\n                        </AppBar>\r\n                    </div>\r\n                    <div className={styles.cardBody}>\r\n                        {tabValue === 0 && (\r\n                            <EditApplyForm \r\n                                questions={course && course.applyFormQuestions ? course.applyFormQuestions : ['']} \r\n                                handleFormSave={this.saveApplyFormQuestions} />\r\n                        )}\r\n                        {tabValue === 1 && (\r\n                            <Applicants \r\n                                applicants={course && course.applicants ? course.applicants : []} \r\n                                course={course}\r\n                                onAcceptUser={this.acceptApplicant}\r\n                                onRemoveUser={this.removeMember} />\r\n                        )}\r\n                        {tabValue === 2 && (\r\n                            <Members \r\n                                members={course && course.members ? course.members : []} \r\n                                courseId={course.courseId}\r\n                                onRemoveUser={this.removeMember} />\r\n                        )}\r\n                        {tabValue === 3 && (\r\n                            <Attendance\r\n                                createNewSession={this.createAttendanceSession} \r\n                                closeSession={this.closeAttendanceSession}\r\n                                activeSession={activeSession}\r\n                                course={course}/>\r\n                        )}\r\n                        {tabValue === 4 && <div>Item Five</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Course;","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nimport styles from './TrainerDashboard.module.scss';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { getCourses } from '../../core/api/courses';\r\nimport WhatDoYouWantToDo from '../admin/Main/WhatDoYouWantToDo';\r\nimport Course from './Course/Course';\r\nimport { Hidden, Drawer } from '@material-ui/core';\r\n@inject('sessionStore', 'drawerStore')\r\n@observer\r\nclass TrainerDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            asignedCourses: [],\r\n            open: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { sessionStore: { authUser } } = this.props;\r\n        if (authUser.asignedCoursesIds) {\r\n            await getCourses().then(response => {\r\n                const asignedCourses = Object.values(response.data).filter(course => authUser.asignedCoursesIds.includes(course.courseId));\r\n                this.setState({ asignedCourses });\r\n            })\r\n        }\r\n    }\r\n\r\n    goOnCoursePage = (course) => {\r\n        const { history } = this.props;\r\n        history.push(`/trainer-dashboard/${course.courseId}`);\r\n        this.handleDrawerToggle();\r\n    }\r\n\r\n    handleCollapseClick = () => {\r\n        const { open } = this.state;\r\n        this.setState({ open: !open });\r\n    }\r\n\r\n    handleDrawerToggle = () => {\r\n        const { drawerStore: {  trainerDrawerOpen, setTrainerDrawerOpen} } = this.props;\r\n        setTrainerDrawerOpen(!trainerDrawerOpen);\r\n    }\r\n\r\n    goOnMainPage = () => {\r\n        const { history } = this.props;\r\n        history.push('/trainer-dashboard');\r\n        this.handleDrawerToggle();\r\n    }\r\n\r\n    drawerItems = () => {\r\n        const { asignedCourses, open } = this.state;\r\n\r\n        return (\r\n            <List\r\n              component=\"nav\"\r\n              className={styles.listRoot}>\r\n                <ListItem button onClick={this.goOnMainPage}>\r\n                    <ListItemText primary=\"Welcome\" />\r\n                </ListItem>\r\n                <ListItem button onClick={this.handleCollapseClick}>\r\n                    <ListItemText primary=\"My courses\" />\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {asignedCourses.map(course => (\r\n                            <ListItem \r\n                                key={course.courseId} \r\n                                button onClick={() => this.goOnCoursePage(course)} \r\n                                className={styles.nested}>\r\n                                <ListItemText primary={course.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <ListItem button onClick={this.goOnMainPage}>\r\n                    <ListItemText primary=\"Feedback\" />\r\n                </ListItem>\r\n            </List>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { drawerStore: { trainerDrawerOpen } } = this.props;\r\n        return (\r\n            <div className={styles.dashboardWrapper}>\r\n                <Hidden smDown>\r\n                    <div className={styles.sidebar}>\r\n                        {this.drawerItems()}\r\n                    </div>\r\n                </Hidden>\r\n                <Hidden mdUp>\r\n                    <Drawer\r\n                      variant='temporary'\r\n                      open={trainerDrawerOpen}\r\n                      onClose={this.handleDrawerToggle}>\r\n                        {this.drawerItems()}\r\n                    </Drawer>\r\n                </Hidden>\r\n               <div className={styles.content}>\r\n                  <Switch>\r\n                        <Route exact path=\"/trainer-dashboard\" component={WhatDoYouWantToDo} />\r\n                        <Route exact path=\"/trainer-dashboard/:courseId\" component={Course} />\r\n                    </Switch>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TrainerDashboard);\r\n","import React, { Component } from 'react';\r\nimport CustomButton from '../../../../core/components/CustomButton/CustomButton';\r\nimport { TextField, Dialog, DialogContent } from '@material-ui/core';\r\nimport QrReader from \"react-qr-reader\";\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject('sessionStore')\r\n@observer\r\nclass UserAttendance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code: '',\r\n            scan: false,\r\n            errorCode: false\r\n        }\r\n    }\r\n\r\n    handleInputChange = ({ target }) => {\r\n        const { value } = target;\r\n        this.setState({ code: value, errorCode: false });\r\n    }\r\n\r\n    handleScan = (data) => {\r\n        if(data) {\r\n            const { handleAttendance, activeSession, sessionStore: { authUser } } = this.props;\r\n            if (activeSession.uniqueCode === data) {\r\n                handleAttendance(authUser);\r\n            } else {\r\n                \r\n            console.log('user not from hereeeeeeeeee')\r\n            }\r\n            this.setState({ scan: false });\r\n        }\r\n    }\r\n\r\n    attendSession = () => {\r\n        const { code } = this.state;\r\n        const { handleAttendance, activeSession, sessionStore: { authUser } } = this.props;\r\n        if (activeSession.uniqueCode === code) {\r\n            handleAttendance(authUser);\r\n        } else {\r\n            this.setState({ errorCode: true, code: '' })\r\n        }\r\n    }\r\n\r\n    scanQrCode = () => {\r\n        this.setState({ scan: true });\r\n    }\r\n\r\n    handleError(err) {\r\n        console.error(err);\r\n    } \r\n\r\n    render() {\r\n        const { code, scan, errorCode } = this.state;\r\n        const { activeSession, sessionStore: { authUser } } = this.props;\r\n\r\n        if (!activeSession) {\r\n            return <div>Nu este nicio sesiune activa! Revino mai tarziu.</div>\r\n        }\r\n\r\n        if(activeSession.attendees && activeSession.attendees.map(user => user.uid).includes(authUser.uid)) {\r\n            return <div>Sunteti deja trecut ca prezent la aceasta sesiune</div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <CustomButton onClick={this.scanQrCode}>Scan QRCode</CustomButton>\r\n                <Dialog open={scan} fullWidth onClose={() => this.setState({scan: false})}>\r\n                    <DialogContent>\r\n                        <QrReader\r\n                            delay={300}\r\n                            onError={this.handleError}\r\n                            onScan={this.handleScan}\r\n                            style={{ width: \"80%\", margin: '0 auto' }}\r\n                        />\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n                <div>OR</div>\r\n                <div>Add unique code for session</div>\r\n                <TextField \r\n                  name=\"code\"\r\n                  value={code}\r\n                  onChange={this.handleInputChange}\r\n                  variant=\"outlined\" />\r\n                <CustomButton onClick={this.attendSession}>Attend session</CustomButton>\r\n                {errorCode && <div>Codul este gresit. Incearca din nou.</div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAttendance;","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './ParticipantCourse.module.scss';\r\nimport { getCourse, updateCourse } from '../../../core/api/courses';\r\nimport UserAttendance from './UserAttendance/UserAttendance';\r\n\r\nconst CustomTabs = withStyles({\r\n    root: {\r\n      backgroundColor: 'transparent',\r\n      boxShadow: 'none'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#FFF',\r\n    },\r\n    scrollButtons: {\r\n        color: '#FFF'\r\n    }\r\n})(Tabs);\r\n\r\nconst CustomTab = withStyles({\r\n    root: {\r\n      color: '#FFF'\r\n    },\r\n    selected: {\r\n      color: '#FFF',\r\n    },\r\n})(Tab);\r\n\r\nclass ParticipantCourse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            course: null,\r\n            tabValue: 0,\r\n            activeSession: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.init()\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { location: { pathname } } =  this.props;\r\n        if (pathname !== prevProps.location.pathname) {\r\n            await this.init();\r\n        }\r\n    }\r\n\r\n    init = async () => {\r\n        const { match: { params: { courseId } } } =  this.props;\r\n\r\n        await getCourse(courseId).then(response => {\r\n            const course = response.data;\r\n            let activeSession = null;\r\n            if (course.attendance) {\r\n                activeSession = course.attendance.find(session => session.active);\r\n            }\r\n            this.setState({ course, tabValue: 0, activeSession });\r\n            \r\n        })\r\n    }\r\n\r\n    handleTabChange = (event, value) => {\r\n        this.setState({ tabValue: value });\r\n    };\r\n\r\n    setUserPresent = async (user) => {\r\n        console.log(user);\r\n        const { course, activeSession } = this.state;\r\n        const updatedCourse = {...course};\r\n        if (activeSession) {\r\n            const index = updatedCourse.attendance.findIndex(session => session.active)\r\n            const updatedAttendees = activeSession.attendees ? [...activeSession.attendees, { uid: user.uid, username: user.username}] : [{ uid: user.uid, username: user.username}];\r\n            updatedCourse.attendance[index] = {...activeSession, attendees: updatedAttendees }\r\n            this.setState({ activeSession: {...activeSession, attendees: updatedAttendees }});\r\n        }\r\n        this.setState({ course: {...updatedCourse} });\r\n        await updateCourse(updatedCourse);\r\n    }\r\n\r\n    render() {\r\n        const { course, tabValue, activeSession } = this.state;\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.card}>\r\n                    <div className={[styles.cardHeader, styles.cardHeaderPrimary].join(' ')}>\r\n                        <h2>{course && course.name}</h2>\r\n                        <AppBar position=\"static\" color=\"default\" className={styles.appBar}>\r\n                            <CustomTabs\r\n                                value={tabValue}\r\n                                onChange={this.handleTabChange}\r\n                                indicatorColor=\"primary\"\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                            >\r\n                                <CustomTab value={0} label=\"Formular de aplicare\" />\r\n                                <CustomTab value={1} label=\"Aplicanti\" />\r\n                                <CustomTab value={2} label=\"Membri\" />\r\n                                <CustomTab value={3} label=\"Prezente\" />\r\n                                <CustomTab value={4} label=\"Anunturi\" />\r\n                            </CustomTabs>\r\n                        </AppBar>\r\n                    </div>\r\n                    <div className={styles.cardBody}>\r\n                        {tabValue === 0 && (\r\n                            <div>Item Five</div>\r\n                            // <EditApplyForm \r\n                            //     questions={course && course.applyFormQuestions ? course.applyFormQuestions : ['']} \r\n                            //     handleFormSave={this.saveApplyFormQuestions} />\r\n                        )}\r\n                        {tabValue === 1 && (\r\n                            <div>Item Five</div>\r\n                            // <Applicants \r\n                            //     applicants={course && course.applicants ? course.applicants : []} \r\n                            //     course={course}\r\n                            //     onAcceptUser={this.acceptApplicant}\r\n                            //     onRemoveUser={this.removeMember} />\r\n                        )}\r\n                        {tabValue === 2 && (\r\n                            <div>Item Five</div>\r\n                            // <Members \r\n                            //     members={course && course.members ? course.members : []} \r\n                            //     courseId={course.courseId} />\r\n                        )}\r\n                        {tabValue === 3 && (\r\n                            <UserAttendance activeSession={activeSession} handleAttendance={this.setUserPresent} />\r\n                            // <Attendance\r\n                            //     members={course && course.members ? course.members : []} \r\n                            //     courseId={course.courseId}/>\r\n                        )}\r\n                        {tabValue === 4 && <div>Item Five</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ParticipantCourse;","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nimport styles from './ParticipantDashboard.module.scss';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { getCourses } from '../../core/api/courses';\r\nimport { Hidden, Drawer } from '@material-ui/core';\r\nimport ParticipantCourse from './Course/ParticipantCourse';\r\n\r\n\r\n@inject('sessionStore', 'drawerStore')\r\n@observer\r\nclass ParticipantDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            participantCourses: [],\r\n            open: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { sessionStore: { authUser } } = this.props;\r\n        if (authUser.participantCoursesIds) {\r\n            await getCourses().then(response => {\r\n                const participantCourses = Object.values(response.data).filter(course => authUser.participantCoursesIds.includes(course.courseId));\r\n                this.setState({ participantCourses });\r\n            })\r\n        }\r\n    }\r\n\r\n    goOnCoursePage = (course) => {\r\n        const { history } = this.props;\r\n        history.push(`/user-account/course/${course.courseId}`);\r\n        this.handleDrawerToggle();\r\n    }\r\n\r\n    handleCollapseClick = () => {\r\n        const { open } = this.state;\r\n        this.setState({ open: !open });\r\n    }\r\n\r\n    handleDrawerToggle = () => {\r\n        const { drawerStore: {  participantDrawerOpen, setParticipantDrawerOpen} } = this.props;\r\n        setParticipantDrawerOpen(!participantDrawerOpen);\r\n    }\r\n\r\n    drawerItems = () => {\r\n        const { participantCourses, open } = this.state;\r\n\r\n        return (\r\n            <List\r\n              component=\"nav\"\r\n              className={styles.listRoot}>\r\n                <ListItem button onClick={this.goOnMainPage}>\r\n                    <ListItemIcon>\r\n                    <SendIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Home\" />\r\n                </ListItem>\r\n                <ListItem button onClick={this.handleCollapseClick}>\r\n                    <ListItemIcon>\r\n                    <SendIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"My courses\" />\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {participantCourses.map(course => (\r\n                            <ListItem key={course.courseId} button onClick={() => this.goOnCoursePage(course)} className={styles.nested}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={course.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n            </List>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { drawerStore: { participantDrawerOpen } } = this.props;\r\n        return (\r\n            <div className={styles.dashboardWrapper}>\r\n                <Hidden smDown>\r\n                    <div className={styles.sidebar}>\r\n                        {this.drawerItems()}\r\n                    </div>\r\n                </Hidden>\r\n                <Hidden mdUp>\r\n                    <Drawer\r\n                      variant='temporary'\r\n                      open={participantDrawerOpen}\r\n                      onClose={this.handleDrawerToggle}>\r\n                        {this.drawerItems()}\r\n                    </Drawer>\r\n                </Hidden>\r\n               <div className={styles.content}>\r\n                  <Switch>\r\n                    <Route exact path=\"/user-account\" />\r\n                    <Route exact path=\"/user-account/course/:courseId\" component={ParticipantCourse} />\r\n                  </Switch>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ParticipantDashboard);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Provider } from 'mobx-react';\r\n\r\nimport styles from './App.module.scss';\r\nimport NavigationBar from './NavigationBar/NavigationBar';\r\nimport MainPage from './MainPage/MainPage';\r\nimport Login from './Authentication/Login';\r\nimport userStore from './core/stores/userStore';\r\nimport sessionStore from './core/stores/sessionStore';\r\nimport messagesStore from './core/stores/messagesStore';\r\nimport ariasStore from './core/stores/ariasStore';\r\nimport coursesStore from './core/stores/coursesStore';\r\nimport drawerStore from './core/stores/drawerStore';\r\nimport Aria from './Arias/Aria/Aria';\r\nimport { withAuthentication } from './Firebase/Session';\r\nimport AdminDashboard from './Dashboard/admin/AdminDashboard';\r\nimport TrainerDashboard from './Dashboard/trainer/TrainerDashboard';\r\nimport ParticipantDashboard from './Dashboard/participant/ParticipantDashboard';\r\n\r\nconst stores = {\r\n  userStore,\r\n  sessionStore,\r\n  messagesStore,\r\n  ariasStore,\r\n  coursesStore,\r\n  drawerStore\r\n}\r\n\r\nconst PrivateAdminRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      if (sessionStore.authUser && sessionStore.authUser.roles && sessionStore.authUser.roles.includes('admin')) {\r\n        return <Component {...props} />;\r\n      }\r\n\r\n      return (\r\n        <Redirect to={{\r\n          pathname: '/main',\r\n          state: { from: props.location }\r\n        }} />\r\n      );\r\n    }} />\r\n);\r\n\r\nconst PrivateTrainerRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      if (sessionStore.authUser && sessionStore.authUser.roles && sessionStore.authUser.roles.includes('trainer')) {\r\n        return <Component {...props} />;\r\n      }\r\n\r\n      return (\r\n        <Redirect to={{\r\n          pathname: '/main',\r\n          state: { from: props.location }\r\n        }} />\r\n      );\r\n    }} />\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Provider {...stores}>\r\n          <BrowserRouter>\r\n            <NavigationBar />\r\n            <div className={styles.content}>\r\n                <Switch>\r\n                  <Redirect exact from=\"/\" to=\"/main\" />\r\n                  <Route exact path=\"/main\" component={MainPage} />\r\n                  <Route exact path=\"/login\" component={Login} />\r\n                  <PrivateAdminRoute path=\"/admin-dashboard\" component={AdminDashboard} />\r\n                  <PrivateTrainerRoute path=\"/trainer-dashboard\" component={TrainerDashboard} />\r\n                  <Route path=\"/user-account\" component={ParticipantDashboard} />\r\n                  <Route exact path=\"/aria/:ariaName\" component={Aria} />\r\n                </Switch>\r\n            </div>\r\n          </BrowserRouter>\r\n        </Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\n\nimport userStore from './core/stores/userStore';\nimport sessionStore from './core/stores/sessionStore';\nimport messagesStore from './core/stores/messagesStore';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './Firebase';\n\nconst stores = {\n    userStore,\n    sessionStore,\n    messagesStore\n}\n\nReactDOM.render(\n    <Provider {...stores}>\n        <FirebaseContext.Provider value={new Firebase()}>\n            <App />\n        </FirebaseContext.Provider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"NavigationBar_headerWrapper__CW4RS\",\"logo\":\"NavigationBar_logo__2jXsn\",\"logoImage\":\"NavigationBar_logoImage__F53M6\",\"menu\":\"NavigationBar_menu__2r0yD\",\"account\":\"NavigationBar_account__2fdXW\",\"avatar\":\"NavigationBar_avatar__jGloe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"Aria_cardWrapper__7oz1a\",\"tabsContainer\":\"Aria_tabsContainer__2IeNl\",\"selectedCourse\":\"Aria_selectedCourse__1UT_O\",\"content\":\"Aria_content__3cNFZ\",\"courseContent\":\"Aria_courseContent__TH3kT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseCard\":\"EditCourseForm_courseCard__2Ou-e\",\"chips\":\"EditCourseForm_chips__1mYFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Applicants_wrapper__14rZH\",\"listHeader\":\"Applicants_listHeader__1Wf3O\",\"listItem\":\"Applicants_listItem__LWRhp\",\"seeAnswersBtn\":\"Applicants_seeAnswersBtn__1McXy\",\"dialogContent\":\"Applicants_dialogContent__2LCiF\",\"question\":\"Applicants_question__CXdFL\",\"answer\":\"Applicants_answer__BIJ1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Members_wrapper__kk4FU\",\"listHeader\":\"Members_listHeader__3YkaY\",\"listItem\":\"Members_listItem__1oEw6\",\"seeAnswersBtn\":\"Members_seeAnswersBtn__pfY3r\",\"dialogContent\":\"Members_dialogContent__2VAwG\",\"question\":\"Members_question__umvlw\",\"answer\":\"Members_answer__3BZAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Presentation_container__-rFrF\",\"presentation\":\"Presentation_presentation__1dOcN\",\"content\":\"Presentation_content__3AwxN\",\"h2\":\"Presentation_h2__U2d1v\",\"h3\":\"Presentation_h3__2jJE1\",\"h4\":\"Presentation_h4__23v5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Course_wrapper__17VfO\",\"card\":\"Course_card__F80pD\",\"cardHeaderPrimary\":\"Course_cardHeaderPrimary__3nWnE\",\"cardHeader\":\"Course_cardHeader__sIbJD\",\"cardBody\":\"Course_cardBody__22lO5\",\"appBar\":\"Course_appBar__1gKcS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Attendance_wrapper__MgKkP\",\"sessions\":\"Attendance_sessions__3GJpj\",\"selectedSession\":\"Attendance_selectedSession__2fMye\",\"content\":\"Attendance_content__3VY0O\",\"dialogContent\":\"Attendance_dialogContent__-z3aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ParticipantCourse_wrapper__1PjKE\",\"card\":\"ParticipantCourse_card__3yX_N\",\"cardHeaderPrimary\":\"ParticipantCourse_cardHeaderPrimary__1t_uH\",\"cardHeader\":\"ParticipantCourse_cardHeader__CCzWt\",\"cardBody\":\"ParticipantCourse_cardBody__1A5vi\",\"appBar\":\"ParticipantCourse_appBar__iNcYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"Arias_mainWrapper___9a1s\",\"card\":\"Arias_card__1T7EB\",\"cardHeaderPrimary\":\"Arias_cardHeaderPrimary__2KfAj\",\"cardHeader\":\"Arias_cardHeader__jpCQY\",\"cardBody\":\"Arias_cardBody__1hJUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWrapper\":\"TrainerDashboard_dashboardWrapper__2HfZi\",\"sidebar\":\"TrainerDashboard_sidebar__1RfIb\",\"nested\":\"TrainerDashboard_nested__3yvS2\",\"content\":\"TrainerDashboard_content__2rj3Y\",\"listRoot\":\"TrainerDashboard_listRoot__3evem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionWrapper\":\"EditApplyForm_questionWrapper__1rthB\",\"buttonsContainer\":\"EditApplyForm_buttonsContainer__2te6N\",\"numberIcon\":\"EditApplyForm_numberIcon__2JYJ7\",\"inputContainer\":\"EditApplyForm_inputContainer__2Hh4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWrapper\":\"ParticipantDashboard_dashboardWrapper__2_CLa\",\"sidebar\":\"ParticipantDashboard_sidebar__3juFu\",\"nested\":\"ParticipantDashboard_nested__3F8GX\",\"content\":\"ParticipantDashboard_content__2lopy\",\"listRoot\":\"ParticipantDashboard_listRoot__1y7Pw\"};"],"sourceRoot":""}